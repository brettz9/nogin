{"version":3,"file":"homeController.iife.min.js","sources":["../polyfills/Error.js","../utilities/ajaxFormClientSideValidate.js","../views/utilities/ConfirmDialog.js","../views/utilities/AlertDialog.js","../views/home.js","../views/utilities/populateForm.js","../views/validators/AccountValidatorView.js","../form-validators/AccountValidator.js","homeController.js"],"sourcesContent":["/* eslint-disable no-restricted-globals, no-shadow */\n// For IE 5.5 (needed per `eslint-plugin-compat`)\nif (typeof Error === 'undefined') {\n  /**\n   * Error polyfill.\n   */\n  // @ts-expect-error Ok for browser\n  window.Error = class Error {};\n}\n","/* globals $, Nogin */\n\n// Note: This per-request approach suffers from the possibility that the\n//   may subsequently open a page from the site with nogin in another tab\n//   where that page sets a new, different token meta expectation to a\n//   new value and this will thereby become invalid.\nconst xsrfCookie = $('meta[name=\"csrf-token\"]').attr('content');\n\n/**\n * @typedef {{\n *   headers?: {[key: string]: string|undefined},\n *   url?: string,\n *   beforeSubmit?: (\n *     arr: {name: string, value: string|boolean}[],\n *     $form: any,\n *     options: any\n *   ) => boolean|void,\n *   success: (\n *     responseText: string, status: string, xhr: any, $form: JQuery\n *   ) => void,\n *   error: (cfg: {\n *     responseText: string\n *   }) => void,\n * }} AjaxFormConfig\n */\n\n/**\n * @typedef {JQuery & {\n *   ajaxForm: (cfg: AjaxFormConfig) => void\n * }} JQueryWithAjaxForm\n */\n\n/**\n * @param {JQueryWithAjaxForm} form\n * @param {AjaxFormConfig & {\n *   validate: (e: Event) => void,\n *   checkXSRF?: boolean\n * }} cfg\n * @returns {void}\n */\nconst ajaxFormClientSideValidate = (form, {\n  validate,\n  // `ajaxForm` properties and methods\n  url,\n  beforeSubmit,\n  success,\n  error,\n  checkXSRF = true\n}) => {\n  // As per problem #3 at https://www.html5rocks.com/en/tutorials/forms/constraintvalidation/#toc-current-implementation-issues ,\n  //  we can't do the validation at submit, so we instead add a capturing\n  //  change listener as well as input listeners to reset the messages;\n  //  note that we can't use the `invalid` event to call `reportValidity`\n  //  after our `setCustomValidity()` (to ensure we get the bubbles showing)\n  //  as that fires further `invalid` events; and setting the form to\n  //  `novalidate` won't show the bubbles.\n  form[0].addEventListener('change', (e) => {\n    // Provide custom messages of invalidity\n    validate(e);\n  }, true);\n\n  form[0].addEventListener('input', ({target}) => {\n    const field = /** @type {HTMLInputElement} */ (target);\n    field.setCustomValidity('');\n    field.checkValidity();\n  }, true);\n\n  // istanbul ignore if\n  if (checkXSRF && !xsrfCookie && !Nogin.disableXSRF) {\n    error({responseText: 'UnknownError'});\n    return;\n  }\n\n  form.ajaxForm({\n    headers: {\n      // `$.ajaxForm` will auto-check for special `meta` tags to add XSRF\n      //   data, but we avoid the extra meta it requires by sending on the\n      //   header.\n      'X-XSRF-Token': xsrfCookie\n    },\n    url,\n    beforeSubmit,\n    success,\n    error\n  });\n};\n\nexport default ajaxFormClientSideValidate;\n","/* globals $ */\n\nconst ConfirmDialog = {\n  /**\n   * @param {{\n   *   type: string,\n   *   header: string,\n   *   body: string|Element,\n   *   cancel: string,\n   *   submit: string\n   * }} cfg\n   * @returns {import('./AlertDialog.js').JQueryWithModal}\n   */\n  populate ({\n    type,\n    header,\n    body,\n    cancel,\n    submit\n  }) {\n    const baseSel = `[data-confirm-type=\"${type}\"][data-name=modal-confirm]`;\n    /** @type {import('./AlertDialog.js').JQueryWithModal} */ (\n      $(baseSel)).modal({\n      show: false, keyboard: true, backdrop: true\n    });\n    $(`${baseSel} .modal-header [data-name=modal-title]`).text(\n      header\n    );\n    $(`${baseSel} [data-name=modal-body] p`).empty().append(\n      body\n    );\n    $(`${baseSel} .cancel`).text(cancel).on('click', () => {\n      /** @type {import('./AlertDialog.js').JQueryWithModal} */ (\n        $(baseSel)\n      ).modal('hide');\n    });\n    $(`${baseSel} .submit`).text(submit);\n    return /** @type {import('./AlertDialog.js').JQueryWithModal} */ (\n      $(baseSel)\n    );\n  },\n\n  /**\n   * @param {JQuery} confirmDialog\n   * @returns {JQuery}\n   */\n  getAccountSubmit (confirmDialog) {\n    return confirmDialog.find('.submit');\n  }\n};\n\nexport default ConfirmDialog;\n","/* globals $ */\n\n/**\n * @typedef {JQuery & {\n *   modal: (showOrHide: \"show\"|\"hide\"|{\n *     show: boolean,\n *     keyboard: boolean,\n *     backdrop: boolean|\"static\"\n *   }) => JQueryWithModal\n * }} JQueryWithModal\n */\n\nconst AlertDialog = {\n  /**\n   * @param {object} cfg\n   * @param {string} cfg.heading\n   * @param {Element|string} cfg.body\n   * @param {boolean} cfg.keyboard\n   * @param {boolean|\"static\"} cfg.backdrop\n   * @returns {JQueryWithModal} `HTMLDivElement`\n   */\n  populate ({\n    heading,\n    body,\n    keyboard,\n    backdrop\n  }) {\n    const modal = /** @type {JQueryWithModal} */ (\n      $('[data-name=modal-alert]')).modal({\n      show: false, keyboard, backdrop\n    });\n    $('[data-name=modal-alert] .modal-header [data-name=modal-title]').text(\n      heading\n    );\n    $('[data-name=modal-alert] [data-name=modal-body] p').empty().append(body);\n    $('[data-name=modal-alert] button').on('click', (e) => {\n      e.preventDefault();\n      modal.modal('hide');\n    });\n    return modal;\n  }\n};\n\nexport default AlertDialog;\n","/* globals $, Nogin */\n\nimport ConfirmDialog from './utilities/ConfirmDialog.js';\nimport AlertDialog from './utilities/AlertDialog.js';\nimport populateForm from './utilities/populateForm.js';\n\nconst {_} = Nogin;\n\n/**\n * @param {object} cfg\n * @param {string} [cfg.message]\n * @param {string} [cfg.type]\n * @param {\"error\"|\"success\"} cfg.heading\n * @returns {import('./utilities/AlertDialog.js').\n *   JQueryWithModal} `HTMLDivElement`\n */\nfunction lockedAlert ({type, message, heading}) {\n  return AlertDialog.populate({\n    heading: /** @type {string} */ (_(heading)),\n    body: message || _(/** @type {string} */ (type), {\n      lb: $('<br/>')[0]\n    }),\n    keyboard: false,\n    backdrop: 'static'\n  });\n}\n\nconst HomeView = {\n  /**\n   * @returns {JQuery}\n   */\n  getLogoutButton () {\n    return $('[data-name=btn-logout]');\n  },\n  /**\n   * @returns {JQuery}\n   */\n  getName () {\n    return $('[data-name=\"name\"]');\n  },\n\n  /**\n   * @returns {JQuery}\n   */\n  getEmail () {\n    return $('[data-name=\"email\"]');\n  },\n\n  /**\n   * @param {JQuery} accountForm\n   * @returns {JQuery}\n   */\n  getDeleteAccountAction (accountForm) {\n    return accountForm.find('[data-name=action1]');\n  },\n\n  /**\n   * @param {JQuery} lockedAlertDialog\n   * @returns {JQuery} `HTMLButtonElement`\n   */\n  getLockedAlertButton (lockedAlertDialog) {\n    return lockedAlertDialog.find('button');\n  },\n\n  /**\n   * @param {JQuery} accountUpdatedAlertDialog\n   * @returns {JQuery} `HTMLButtonElement`\n   */\n  getAccountUpdatedButton (accountUpdatedAlertDialog) {\n    return accountUpdatedAlertDialog.find('button');\n  },\n\n  /**\n   * @returns {JQuery}\n   */\n  getUser () {\n    return $('[data-name=\"user\"]');\n  },\n\n  /**\n   * @param {object} cfg\n   * @param {\"AppearsChangingEmail\"} cfg.type\n   * @returns {import('./utilities/AlertDialog.js').\n   *   JQueryWithModal} `HTMLDivElement`\n  */\n  onShowConfirmation ({type}) {\n    return ConfirmDialog.populate({\n      type: 'notice',\n      header: /** @type {string} */ (_('notice')),\n      body: /** @type {Element} */ (_(type, {\n        lb: $('<br/>')[0]\n      })),\n      cancel: /** @type {string} */ (_('cancel')),\n      submit: /** @type {string} */ (_('confirm'))\n    });\n  },\n\n  /**\n   * @returns {import('./utilities/AlertDialog.js').\n   *   JQueryWithModal} `HTMLDivElement`\n   */\n  setDeleteAccount () {\n    // setup the confirm window that displays when the user chooses to\n    //  delete their account\n    const deleteAccountConfirmDialog = ConfirmDialog.populate({\n      type: 'deleteAccount',\n      header: /** @type {string} */ (_('deleteAccount')),\n      body: /** @type {string} */ (_('sureWantDeleteAccount')),\n      cancel: /** @type {string} */ (_('cancel')),\n      submit: /** @type {string} */ (_('delete'))\n    });\n    deleteAccountConfirmDialog.find('.submit').addClass('btn-danger');\n    return /** @type {import('./utilities/AlertDialog.js').JQueryWithModal} */ (\n      deleteAccountConfirmDialog\n    );\n  },\n  /**\n   * @returns {import('../utilities/ajaxFormClientSideValidate.js').\n   *   JQueryWithAjaxForm} `HTMLFormElement`\n   */\n  setAccountSettings () {\n    const accountForm = populateForm('[data-name=account-form]', {\n      heading: /** @type {string} */ (_('accountSettings')),\n      subheading: /** @type {string} */ (_('hereAreCurrentSettings')),\n      action1: /** @type {string} */ (_('deleteText')),\n      action2: /** @type {string} */ (_('updateText'))\n    });\n    accountForm.find('[data-name=action1]').\n      removeClass('btn-outline-dark').\n      addClass('btn-danger');\n    return accountForm;\n  },\n  /**\n   * @returns {import('./utilities/AlertDialog.js').\n   *   JQueryWithModal} `HTMLDivElement`\n   */\n  onAccountUpdated () {\n    return AlertDialog.populate({\n      heading: /** @type {string} */ (_('success')),\n      body: _('yourAccountHasBeenUpdated'),\n      keyboard: true,\n      backdrop: true\n    });\n  },\n\n  /**\n   * @returns {import('./utilities/AlertDialog.js').\n   *   JQueryWithModal} `HTMLDivElement`\n   */\n  onAccountUpdatedButNotYetEmail () {\n    return AlertDialog.populate({\n      heading: /** @type {string} */ (_('success')),\n      body: _('yourAccountHasBeenUpdatedButEmail'),\n      keyboard: true,\n      backdrop: true\n    });\n  },\n\n  /**\n   * @param {object} cfg\n   * @param {\"accountDeleted\"|\"loggedOut\"} cfg.type\n   * @returns {import('./utilities/AlertDialog.js').\n   *   JQueryWithModal} `HTMLDivElement`\n   */\n  onShowLockedAlert ({type}) {\n    return lockedAlert({type, heading: 'success'});\n  },\n\n  /**\n   * @param {object} cfg\n   * @param {string} [cfg.message]\n   * @param {\"ErrorLoggingOut\"|\"FailureSubmittingUserInfo\"|\n   * \"SessionLost\"|\"ProblemDispatchingLink\"} [cfg.type]\n   * @returns {import('./utilities/AlertDialog.js').\n   *   JQueryWithModal} `HTMLDivElement`\n   */\n  onShowLockedErrorAlert ({type, message}) {\n    return lockedAlert({type, message, heading: 'error'});\n  }\n};\n\nexport default HomeView;\n","/* globals $ */\n\n/**\n * @param {string} sel\n * @param {{\n *   heading: string,\n *   subheading: string,\n *   action1: string,\n *   action2: string\n * }} cfg\n * @returns {import('../../utilities/ajaxFormClientSideValidate.js').\n   *   JQueryWithAjaxForm}\n */\nconst populateForm = (sel, {\n  heading,\n  subheading,\n  action1,\n  action2\n}) => {\n  // customize the account settings form\n  $(sel + ' h1.dialog').text(heading);\n  $(sel + ' h2.dialog').text(subheading);\n  $(sel + ' [data-name=action1]').text(action1);\n  $(sel + ' [data-name=action2]').text(action2);\n  return (\n    /**\n     * @type {import('../../utilities/ajaxFormClientSideValidate.js').\n     *   JQueryWithAjaxForm}\n     */ ($(sel))\n  );\n};\n\nexport default populateForm;\n","/* globals $, Nogin */\n\nconst {_} = Nogin;\n\n/**\n * @typedef {object} AccountInfoElements\n * @property {HTMLInputElement} name\n * @property {HTMLInputElement} email\n * @property {HTMLInputElement} user\n * @property {HTMLInputElement} pass\n * @property {HTMLInputElement} passConfirm\n */\n\nconst AccountValidatorView = {\n  /**\n   * @returns {HTMLFormElement}\n   */\n  getForm () {\n    return /** @type {HTMLFormElement} */ ($('[data-name=account-form]')[0]);\n  },\n\n  /**\n   * @returns {JQuery}\n   */\n  getUserId () {\n    return $('#userId');\n  },\n\n  /**\n   * @returns {AccountInfoElements}\n   */\n  getFormFields () {\n    return {\n      name: /** @type {HTMLInputElement} */ ($('[data-name=\"name\"]')[0]),\n      email: /** @type {HTMLInputElement} */ ($('[data-name=\"email\"]')[0]),\n      user: /** @type {HTMLInputElement} */ ($('[data-name=\"user\"]')[0]),\n      pass: /** @type {HTMLInputElement} */ ($('[data-name=\"pass\"]')[0]),\n      passConfirm: $('[data-name=\"pass-confirm\"]') &&\n      /** @type {HTMLInputElement} */ ($('[data-name=\"pass-confirm\"]')[0])\n    };\n  },\n\n  /**\n   * @type {Object<string, Object<string,string>>}\n   */\n  errorMessages: {\n    name: {\n      PleaseEnterName: /** @type {string} */ (_('PleaseEnterName'))\n    },\n    email: {\n      emailAddressAlreadyInUse: /** @type {string} */ (\n        _('emailAddressAlreadyInUse')\n      ),\n      PleaseEnterValidEmail: /** @type {string} */ (_('PleaseEnterValidEmail'))\n    },\n    user: {\n      userNameAlreadyInUse: /** @type {string} */ (_('userNameAlreadyInUse')),\n      PleaseChooseUserName: /** @type {string} */ (_('PleaseChooseUserName'))\n    },\n    pass: {\n      PasswordMinimumLength: /** @type {string} */ (_('PasswordMinimumLength')),\n      PasswordsDontMatch: /** @type {string} */ (_('PasswordsDontMatch'))\n    }\n  }\n};\n\nexport default AccountValidatorView;\n","import AccountValidatorView from '../views/validators/AccountValidatorView.js';\n\n/**\n * Ensures accounts are valid.\n */\nclass AccountValidator {\n  /**\n   * Sets up properties and methods.\n   * @param {object} [cfg]\n   * @param {boolean} [cfg.signup]\n   */\n  constructor ({signup} = {}) {\n    // build array maps of the form inputs & control groups\n    this.signup = signup;\n\n    this.form = AccountValidatorView.getForm();\n    this.formFields = AccountValidatorView.getFormFields();\n    this.userId = AccountValidatorView.getUserId();\n    this.errorMessages = AccountValidatorView.errorMessages;\n\n    /**\n     * @param {string} s\n     * @returns {boolean}\n     */\n    this.userIsLoggedIn = (s) => {\n      // if user is logged in and hasn't changed their password, return ok\n      return Boolean(this.userId.val()) && s === '';\n    };\n  }\n\n  /**\n   * @returns {void}\n   */\n  showInvalidEmail () {\n    this.formFields.email.setCustomValidity(\n      this.errorMessages.email.emailAddressAlreadyInUse\n    );\n    this.form.reportValidity();\n  }\n\n  /**\n   * @returns {void}\n   */\n  showInvalidUserName () {\n    this.formFields.user.setCustomValidity(\n      this.errorMessages.user.userNameAlreadyInUse\n    );\n    this.form.reportValidity();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  validateForm () {\n    const {name, email, user, pass, passConfirm} = this.formFields;\n    Object.values(this.formFields).forEach((field) => {\n      if (field) {\n        field.setCustomValidity('');\n      }\n    });\n    // todo[cypress@>=14.0.0]: validity: remove this disabling of istanbul\n    //  to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (name.validity.tooShort) {\n      name.setCustomValidity(this.errorMessages.name.PleaseEnterName);\n    }\n    // todo[cypress@>=14.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (email.validity.patternMismatch) {\n      email.setCustomValidity(this.errorMessages.email.PleaseEnterValidEmail);\n    }\n    // todo[cypress@>=14.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (user.validity.tooShort) {\n      user.setCustomValidity(this.errorMessages.user.PleaseChooseUserName);\n    }\n    // todo[cypress@>=14.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (!this.userIsLoggedIn(pass.value) && pass.validity.tooShort) {\n      pass.setCustomValidity(this.errorMessages.pass.PasswordMinimumLength);\n    }\n    if (this.signup && pass.value !== passConfirm.value) {\n      pass.setCustomValidity(this.errorMessages.pass.PasswordsDontMatch);\n    }\n    return this.form.reportValidity();\n  }\n}\n\nexport default AccountValidator;\n","/* globals $, Nogin */\n\nimport '../polyfills/Error.js';\nimport '../polyfills/console.js';\n\nimport ajaxFormClientSideValidate from\n  '../utilities/ajaxFormClientSideValidate.js';\n\nimport ConfirmDialog from '../views/utilities/ConfirmDialog.js';\nimport HomeView from '../views/home.js';\nimport AccountValidator from '../form-validators/AccountValidator.js';\n\n/**\n * @typedef {Error & {\n *   text: string,\n *   responseText: string,\n *   statusText?: string\n * }} AjaxPostError\n */\n\nconst xsrfCookie = $('meta[name=\"csrf-token\"]').attr('content');\n\n// User name field\nconst name = HomeView.getName();\nname.focus();\n\n// Disable user field\nconst user = HomeView.getUser();\nuser.attr('disabled', 'disabled');\n\n// handle account deletion\nconst deleteAccountConfirmDialog = HomeView.setDeleteAccount();\nConfirmDialog.getAccountSubmit(\n  deleteAccountConfirmDialog\n).on('click', async () => {\n  try {\n    await deleteAccount();\n  } catch (er) {\n    const err = /** @type {AjaxPostError} */ (er);\n\n    // Log just in case not internationalized\n    console.error(Nogin._('ErrorFormat', {\n      text: err.text,\n      statusText:\n        // istanbul ignore next\n        err.statusText ||\n        ''\n    }));\n    // However, should already be internationalized by server\n    showLockedErrorAlert({message: err.text});\n  }\n});\n\nconst logoutButton = HomeView.getLogoutButton();\n// handle user logout\nlogoutButton.on('click', async () => {\n  try {\n    await attemptLogout();\n  } catch (er) {\n    const err = /** @type {AjaxPostError} */ (er);\n    // Log in case actual error not internationalized\n    console.error(Nogin._('ErrorFormat', {\n      text: err.text,\n      statusText:\n        // istanbul ignore next\n        err.statusText ||\n        ''\n    }));\n    showLockedErrorAlert({type: 'ErrorLoggingOut'});\n  }\n});\n\n// confirm account deletion\nconst accountForm = HomeView.setAccountSettings();\nHomeView.getDeleteAccountAction(accountForm).on('click', () => {\n  deleteAccountConfirmDialog.modal('show');\n});\nsetupValidationSubmission();\n\n/**\n * @returns {boolean}\n */\nfunction emailHasChanged () {\n  const email = HomeView.getEmail();\n  const emailElem = /** @type {HTMLInputElement} */ (email[0]);\n  return emailElem.value !== emailElem.defaultValue;\n}\n\n/**\n * @returns {void}\n */\nfunction setupValidationSubmission () {\n  let confirmed = false;\n  const av = new AccountValidator();\n  accountForm[0].addEventListener('submit', (e) => {\n    const submissionOkToContinue = confirmed ||\n      !emailHasChanged();\n    if (submissionOkToContinue) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const emailChangeConfirmDialog = HomeView.onShowConfirmation({\n      type: 'AppearsChangingEmail'\n    });\n    emailChangeConfirmDialog.modal('show');\n    ConfirmDialog.getAccountSubmit(\n      emailChangeConfirmDialog\n    ).on('click', () => {\n      confirmed = true;\n      accountForm.submit();\n      emailChangeConfirmDialog.modal('hide');\n    });\n  }, true);\n  ajaxFormClientSideValidate(accountForm, {\n    validate () {\n      av.validateForm();\n    },\n    beforeSubmit (formData /* , jqForm, options */) {\n      // Push the disabled username field onto the form data array\n      formData.push({\n        name: 'user', value: /** @type {string} */ (user.val())\n      });\n      return true;\n    },\n    success (responseText, status /* , xhr, $form */) {\n      // \"nocontent\" (204), \"notmodified\" (304), \"parseerror\" (JSON or XML)\n      // istanbul ignore else\n      if (status === 'success') {\n        onUpdateSuccess();\n      }\n      confirmed = false; // Allow resubmission\n    },\n    error (e) {\n      confirmed = false; // Allow resubmission\n      switch (e.responseText) {\n      case 'email-taken':\n        av.showInvalidEmail();\n        break;\n      case 'session-lost': {\n        showLockedErrorAlert({type: 'SessionLost'});\n        break;\n      } case 'problem-dispatching-link': {\n        showLockedErrorAlert({type: 'ProblemDispatchingLink'});\n        break;\n      } default:\n        HomeView.onShowLockedErrorAlert({type: 'FailureSubmittingUserInfo'});\n        break;\n      }\n    }\n  });\n}\n\n/**\n * @returns {void}\n */\nfunction onUpdateSuccess () {\n  const accountUpdatedAlertDialog = emailHasChanged()\n    ? HomeView.onAccountUpdatedButNotYetEmail()\n    : HomeView.onAccountUpdated();\n  accountUpdatedAlertDialog.modal('show');\n}\n\n/**\n * @param {string} url\n * @returns {Promise<void>}\n */\nfunction post (url) {\n  // eslint-disable-next-line promise/avoid-new\n  return new Promise((resolve, reject) => {\n    $.ajax(url, {\n      type: 'post',\n      headers: {\n        'X-XSRF-Token': xsrfCookie\n      }\n    }).done(resolve).fail(\n      (jqXHR /* , textStatus, errorThrown */) => {\n        const err = /** @type {AjaxPostError} */ (\n          new Error('Ajax POST error')\n        );\n        err.text = jqXHR.responseText;\n        err.responseText = jqXHR.statusText;\n        reject(err);\n      }\n    );\n  });\n  // Reenable after these related issues are fixed:\n  // https://github.com/cypress-io/cypress/issues/95\n  // https://github.com/cypress-io/cypress/issues/687\n  /*\n  const resp = await fetch(url, {\n    method: 'POST'\n  });\n  await checkErrors(resp);\n  */\n  /**\n   * @param {Response} resp\n   * @throws {Error}\n   * @returns {Promise<void>}\n   */\n  /*\n  async function checkErrors (resp) {\n    if (!resp.ok) {\n      const err = new Error();\n      err.text = await resp.text();\n      err.responseText = resp.statusText;\n      throw err;\n    }\n  }\n  */\n}\n\n/**\n * @throws {Error}\n * @returns {Promise<void>}\n */\nasync function deleteAccount () {\n  deleteAccountConfirmDialog.modal('hide');\n  await post(Nogin.Routes.delete);\n  showLockedAlert({type: 'accountDeleted'});\n}\n\n/**\n * @throws {Error}\n * @returns {Promise<void>}\n */\nasync function attemptLogout () {\n  await post(Nogin.Routes.logout);\n  showLockedAlert({type: 'loggedOut'});\n}\n\n/**\n * @param {object} cfg\n * @param {\"accountDeleted\"|\"loggedOut\"} cfg.type\n * @returns {void}\n */\nfunction showLockedAlert ({type}) {\n  const lockedAlertDialog = HomeView.onShowLockedAlert({type});\n  lockedAlertDialog.modal('show');\n  const redirectToRoot = () => {\n    Nogin.redirect('root');\n  };\n  HomeView.getLockedAlertButton(\n    lockedAlertDialog\n  ).on('click', redirectToRoot);\n  setTimeout(redirectToRoot, 3000);\n}\n\n/**\n * @param {object} cfg\n * @param {\"ErrorLoggingOut\"|\"SessionLost\"|\"ProblemDispatchingLink\"|\n *   \"FailureSubmittingUserInfo\"} [cfg.type]\n * @param {string} [cfg.message]\n * @returns {void}\n*/\nfunction showLockedErrorAlert ({type, message}) {\n  const lockedAlertDialog = HomeView.onShowLockedErrorAlert({type, message});\n  lockedAlertDialog.modal('show');\n  const redirectToRoot = () => {\n    Nogin.redirect('root');\n  };\n  HomeView.getLockedAlertButton(\n    lockedAlertDialog\n  ).on('click', redirectToRoot);\n  setTimeout(redirectToRoot, 3000);\n}\n"],"names":["Error","window","_createClass","_classCallCheck","xsrfCookie","$","attr","ConfirmDialog","_ref","type","header","body","cancel","submit","baseSel","concat","modal","show","keyboard","backdrop","text","empty","append","on","confirmDialog","find","AlertDialog","heading","e","preventDefault","_","Nogin","lockedAlert","message","lb","HomeView","getLogoutButton","getName","getEmail","getDeleteAccountAction","accountForm","getLockedAlertButton","lockedAlertDialog","getAccountUpdatedButton","accountUpdatedAlertDialog","getUser","onShowConfirmation","_ref2","setDeleteAccount","deleteAccountConfirmDialog","addClass","setAccountSettings","sel","subheading","action1","action2","removeClass","onAccountUpdated","onAccountUpdatedButNotYetEmail","onShowLockedAlert","_ref3","onShowLockedErrorAlert","_ref4","AccountValidatorView","getForm","getUserId","getFormFields","name","email","user","pass","passConfirm","errorMessages","PleaseEnterName","emailAddressAlreadyInUse","PleaseEnterValidEmail","userNameAlreadyInUse","PleaseChooseUserName","PasswordMinimumLength","PasswordsDontMatch","AccountValidator","_this","this","signup","arguments","length","undefined","form","formFields","userId","userIsLoggedIn","s","Boolean","val","key","value","setCustomValidity","reportValidity","_this$formFields","Object","values","forEach","field","validity","tooShort","patternMismatch","_empty","attemptLogout","_async","_await","post","Routes","logout","showLockedAlert","deleteAccount","_callIgnored","direct","then","result","Promise","resolve","reject","_call","_catch","recover","_continueIgnored","f","args","i","apply","focus","er","err","console","error","statusText","showLockedErrorAlert","confirmed","av","validate","url","beforeSubmit","success","_ref$checkXSRF","checkXSRF","emailHasChanged","emailElem","defaultValue","ajax","headers","done","fail","jqXHR","responseText","redirectToRoot","redirect","setTimeout","addEventListener","stopPropagation","emailChangeConfirmDialog","validateForm","formData","push","status","showInvalidEmail","target","checkValidity","disableXSRF","ajaxForm"],"mappings":"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"}