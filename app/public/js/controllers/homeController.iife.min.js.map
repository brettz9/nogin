{"version":3,"file":"homeController.iife.min.js","sources":["../polyfills/Error.js","../polyfills/console.js","../utilities/ajaxFormClientSideValidate.js","../views/utilities/ConfirmDialog.js","../views/utilities/AlertDialog.js","../views/home.js","../views/utilities/populateForm.js","../views/validators/AccountValidatorView.js","../form-validators/AccountValidator.js","homeController.js"],"sourcesContent":["/* eslint-disable no-restricted-globals, no-shadow */\n// For IE 5.5 (needed per `eslint-plugin-compat`)\nif (typeof Error === 'undefined') {\n  /**\n   * Error polyfill.\n   */\n  window.Error = class Error {};\n}\n","// No-op shim for Opera 9 and IE 5.5 (needed per `eslint-plugin-compat`)\nconst consoleShim = typeof console === 'undefined'\n  ? {}\n  : console;\n\nconst noop = () => {\n  // No-op\n};\n\n['error', 'log'].forEach((prop) => {\n  if (!consoleShim[prop]) {\n    consoleShim[prop] = noop;\n  }\n});\n\nexport default consoleShim;\n","const ajaxFormClientSideValidate = (form, {\n  validate,\n  // `ajaxForm` properties and methods\n  url,\n  beforeSubmit,\n  success,\n  error\n}) => {\n  // As per problem #3 at https://www.html5rocks.com/en/tutorials/forms/constraintvalidation/#toc-current-implementation-issues ,\n  //  we can't do the validation at submit, so we instead add a capturing\n  //  change listener as well as input listeners to reset the messages;\n  //  note that we can't use the `invalid` event to call `reportValidity`\n  //  after our `setCustomValidity()` (to ensure we get the bubbles showing)\n  //  as that fires further `invalid` events; and setting the form to\n  //  `novalidate` won't show the bubbles.\n  form[0].addEventListener('change', (e) => {\n    // Provide custom messages of invalidity\n    validate(e);\n  }, true);\n\n  form[0].addEventListener('input', ({target: field}) => {\n    field.setCustomValidity('');\n    field.checkValidity('');\n  }, true);\n\n  return form.ajaxForm({\n    url,\n    beforeSubmit,\n    success,\n    error\n  });\n};\n\nexport default ajaxFormClientSideValidate;\n","/* globals $ */\n\nconst ConfirmDialog = {\n  populate ({\n    type,\n    header,\n    body,\n    cancel,\n    submit\n  }) {\n    const baseSel = `[data-confirm-type=\"${type}\"][data-name=modal-confirm]`;\n    $(baseSel).modal({\n      show: false, keyboard: true, backdrop: true\n    });\n    $(`${baseSel} .modal-header [data-name=modal-title]`).text(\n      header\n    );\n    $(`${baseSel} [data-name=modal-body] p`).empty().append(\n      body\n    );\n    $(`${baseSel} .cancel`).text(cancel);\n    $(`${baseSel} .submit`).text(submit);\n    return $(baseSel);\n  },\n\n  /**\n   * @param {external:jQuery} confirmDialog\n   * @returns {external:jQuery}\n   */\n  getAccountSubmit (confirmDialog) {\n    return confirmDialog.find('.submit');\n  }\n};\n\nexport default ConfirmDialog;\n","/* globals $ */\n\nconst AlertDialog = {\n  /**\n   * @param {PlainObject} cfg\n   * @param {string} cfg.heading\n   * @param {external:jQuery} cfg.body\n   * @param {boolean} cfg.keyboard\n   * @param {boolean|\"static\"} cfg.backdrop\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  populate ({\n    heading,\n    body,\n    keyboard,\n    backdrop\n  }) {\n    $('[data-name=modal-alert]').modal({\n      show: false, keyboard, backdrop\n    });\n    $('[data-name=modal-alert] .modal-header [data-name=modal-title]').text(\n      heading\n    );\n    $('[data-name=modal-alert] [data-name=modal-body] p').empty().append(body);\n    return $('[data-name=modal-alert]');\n  }\n};\n\nexport default AlertDialog;\n","/* globals $, Nogin */\n\nimport ConfirmDialog from './utilities/ConfirmDialog.js';\nimport AlertDialog from './utilities/AlertDialog.js';\nimport populateForm from './utilities/populateForm.js';\n\nconst {_} = Nogin;\n\n/**\n * @param {PlainObject} cfg\n * @param {string} [cfg.message]\n * @param {string} [cfg.type]\n * @param {\"error\"|\"success\"} [cfg.heading]\n * @returns {external:jQuery} `HTMLDivElement`\n */\nfunction lockedAlert ({type, message, heading}) {\n  return AlertDialog.populate({\n    heading: _(heading),\n    body: message || _(type, {\n      lb: $('<br/>')[0]\n    }),\n    keyboard: false,\n    backdrop: 'static'\n  });\n}\n\nconst HomeView = {\n  /**\n   * @returns {external:jQuery}\n   */\n  getLogoutButton () {\n    return $('[data-name=btn-logout]');\n  },\n  /**\n   * @returns {external:jQuery}\n   */\n  getName () {\n    return $('[data-name=\"name\"]');\n  },\n\n  /**\n   * @returns {external:jQuery}\n   */\n  getEmail () {\n    return $('[data-name=\"email\"]');\n  },\n\n  /**\n   * @param {external:jQuery} accountForm\n   * @returns {external:jQuery}\n   */\n  getDeleteAccountAction (accountForm) {\n    return accountForm.find('[data-name=action1]');\n  },\n\n  /**\n   * @param {external:jQuery} lockedAlertDialog\n   * @returns {external:jQuery} `HTMLButtonElement`\n   */\n  getLockedAlertButton (lockedAlertDialog) {\n    return lockedAlertDialog.find('button');\n  },\n\n  /**\n   * @param {external:jQuery} accountUpdatedAlertDialog\n   * @returns {external:jQuery} `HTMLButtonElement`\n   */\n  getAccountUpdatedButton (accountUpdatedAlertDialog) {\n    return accountUpdatedAlertDialog.find('button');\n  },\n\n  /**\n   * @returns {external:jQuery}\n   */\n  getUser () {\n    return $('[data-name=\"user\"]');\n  },\n\n  /**\n   * @param {PlainObject} cfg\n   * @param {\"AppearsChangingEmail\"} cfg.type\n   * @returns {external:jQuery} `HTMLDivElement`\n  */\n  onShowConfirmation ({type}) {\n    return ConfirmDialog.populate({\n      type: 'notice',\n      header: _('notice'),\n      body: _(type, {\n        lb: $('<br/>')[0]\n      }),\n      cancel: _('cancel'),\n      submit: _('confirm')\n    });\n  },\n\n  /**\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  setDeleteAccount () {\n    // setup the confirm window that displays when the user chooses to\n    //  delete their account\n    const deleteAccountConfirmDialog = ConfirmDialog.populate({\n      type: 'deleteAccount',\n      header: _('deleteAccount'),\n      body: _('sureWantDeleteAccount'),\n      cancel: _('cancel'),\n      submit: _('delete')\n    });\n    deleteAccountConfirmDialog.find('.submit').addClass('btn-danger');\n    return deleteAccountConfirmDialog;\n  },\n  /**\n   * @returns {external:jQuery} `HTMLFormElement`\n   */\n  setAccountSettings () {\n    const accountForm = populateForm('[data-name=account-form]', {\n      heading: _('accountSettings'),\n      subheading: _('hereAreCurrentSettings'),\n      action1: _('deleteText'),\n      action2: _('updateText')\n    });\n    accountForm.find('[data-name=action1]')\n      .removeClass('btn-outline-dark')\n      .addClass('btn-danger');\n    return accountForm;\n  },\n  /**\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  onAccountUpdated () {\n    return AlertDialog.populate({\n      heading: _('success'),\n      body: _('yourAccountHasBeenUpdated'),\n      keyboard: true,\n      backdrop: true\n    });\n  },\n\n  /**\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  onAccountUpdatedButNotYetEmail () {\n    return AlertDialog.populate({\n      heading: _('success'),\n      body: _('yourAccountHasBeenUpdatedButEmail'),\n      keyboard: true,\n      backdrop: true\n    });\n  },\n\n  /**\n   * @param {PlainObject} cfg\n   * @param {\"accountDeleted\"|\"loggedOut\"} cfg.type\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  onShowLockedAlert ({type}) {\n    return lockedAlert({type, heading: 'success'});\n  },\n\n  /* eslint-disable jsdoc/require-param, jsdoc/require-param-name, jsdoc/require-param-type, jsdoc/check-param-names -- Waiting on update of comment-parser: https://github.com/syavorsky/comment-parser/issues/109 */\n  /**\n   * @param {PlainObject} cfg\n   * @param {string} [cfg.message]\n   * @param {\"ErrorLoggingOut\"|\"FailureSubmittingUserInfo\"|\n   * \"SessionLost\"|\"ProblemDispatchingLink\"} [cfg.type]\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  onShowLockedErrorAlert ({type, message}) {\n    /* eslint-enable jsdoc/require-param, jsdoc/require-param-name, jsdoc/require-param-type, jsdoc/check-param-names -- Waiting on update of comment-parser: https://github.com/syavorsky/comment-parser/issues/109 */\n    return lockedAlert({type, message, heading: 'error'});\n  }\n};\n\nexport default HomeView;\n","/* globals $ */\n\nconst populateForm = (sel, {\n  heading,\n  subheading,\n  action1,\n  action2\n}) => {\n  // customize the account settings form\n  $(sel + ' h1.dialog').text(heading);\n  $(sel + ' h2.dialog').text(subheading);\n  $(sel + ' [data-name=action1]').text(action1);\n  $(sel + ' [data-name=action2]').text(action2);\n  return $(sel);\n};\n\nexport default populateForm;\n","/* globals $, Nogin */\n\nconst {_} = Nogin;\n\n/**\n* @typedef {PlainObject} AccountInfoElements\n* @property {external:jQuery} name\n* @property {external:jQuery} email\n* @property {external:jQuery} user\n* @property {external:jQuery} pass\n*/\n\nconst AccountValidatorView = {\n  /**\n   * @returns {HTMLFormElement}\n   */\n  getForm () {\n    return $('[data-name=account-form]')[0];\n  },\n\n  /**\n   * @returns {external:jQuery}\n   */\n  getUserId () {\n    return $('#userId');\n  },\n\n  /**\n   * @returns {AccountInfoElements}\n   */\n  getFormFields () {\n    return {\n      name: $('[data-name=\"name\"]')[0],\n      email: $('[data-name=\"email\"]')[0],\n      user: $('[data-name=\"user\"]')[0],\n      pass: $('[data-name=\"pass\"]')[0],\n      passConfirm: $('[data-name=\"pass-confirm\"]') &&\n        $('[data-name=\"pass-confirm\"]')[0]\n    };\n  },\n\n  /**\n   * @type {PlainObject<string,PlainObject<string,string>>}\n   */\n  errorMessages: {\n    name: {\n      PleaseEnterName: _('PleaseEnterName')\n    },\n    email: {\n      emailAddressAlreadyInUse: _('emailAddressAlreadyInUse'),\n      PleaseEnterValidEmail: _('PleaseEnterValidEmail')\n    },\n    user: {\n      userNameAlreadyInUse: _('userNameAlreadyInUse'),\n      PleaseChooseUserName: _('PleaseChooseUserName')\n    },\n    pass: {\n      PasswordMinimumLength: _('PasswordMinimumLength'),\n      PasswordsDontMatch: _('PasswordsDontMatch')\n    }\n  }\n};\n\nexport default AccountValidatorView;\n","import AccountValidatorView from '../views/validators/AccountValidatorView.js';\n\n/**\n * Ensures accounts are valid.\n */\nclass AccountValidator {\n  /**\n   * Sets up properties and methods.\n   * @param {PlainObject} cfg\n   * @param {boolean} cfg.signup\n   */\n  constructor ({signup} = {}) {\n    // build array maps of the form inputs & control groups\n    this.signup = signup;\n\n    this.form = AccountValidatorView.getForm();\n    this.formFields = AccountValidatorView.getFormFields();\n    this.userId = AccountValidatorView.getUserId();\n    this.errorMessages = AccountValidatorView.errorMessages;\n\n    this.userIsLoggedIn = (s) => {\n      // if user is logged in and hasn't changed their password, return ok\n      return this.userId.val() && s === '';\n    };\n  }\n\n  /**\n   * @returns {void}\n   */\n  showInvalidEmail () {\n    this.formFields.email.setCustomValidity(\n      this.errorMessages.email.emailAddressAlreadyInUse\n    );\n    this.form.reportValidity();\n  }\n\n  /**\n   * @returns {void}\n   */\n  showInvalidUserName () {\n    this.formFields.user.setCustomValidity(\n      this.errorMessages.user.userNameAlreadyInUse\n    );\n    this.form.reportValidity();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  validateForm () {\n    const {name, email, user, pass, passConfirm} = this.formFields;\n    Object.values(this.formFields).forEach((field) => {\n      if (field) {\n        field.setCustomValidity('');\n      }\n    });\n    // Todo[cypress@>6.0.0]: validity: remove this disabling of istanbul\n    //  to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (name.validity.tooShort) {\n      name.setCustomValidity(this.errorMessages.name.PleaseEnterName);\n    }\n    // Todo[cypress@>6.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (email.validity.patternMismatch) {\n      email.setCustomValidity(this.errorMessages.email.PleaseEnterValidEmail);\n    }\n    // Todo[cypress@>6.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (user.validity.tooShort) {\n      user.setCustomValidity(this.errorMessages.user.PleaseChooseUserName);\n    }\n    // Todo[cypress@>6.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (!this.userIsLoggedIn() && pass.validity.tooShort) {\n      pass.setCustomValidity(this.errorMessages.pass.PasswordMinimumLength);\n    }\n    if (this.signup && pass.value !== passConfirm.value) {\n      pass.setCustomValidity(this.errorMessages.pass.PasswordsDontMatch);\n    }\n    return this.form.reportValidity();\n  }\n}\n\nexport default AccountValidator;\n","/* globals $, Nogin */\n\nimport '../polyfills/Error.js';\nimport '../polyfills/console.js';\n\nimport ajaxFormClientSideValidate from\n  '../utilities/ajaxFormClientSideValidate.js';\n\nimport ConfirmDialog from '../views/utilities/ConfirmDialog.js';\nimport HomeView from '../views/home.js';\nimport AccountValidator from '../form-validators/AccountValidator.js';\n\n// User name field\nconst name = HomeView.getName();\nname.focus();\n\n// Disable user field\nconst user = HomeView.getUser();\nuser.attr('disabled', 'disabled');\n\n// handle account deletion\nconst deleteAccountConfirmDialog = HomeView.setDeleteAccount();\nConfirmDialog.getAccountSubmit(deleteAccountConfirmDialog).click(async () => {\n  try {\n    await deleteAccount();\n  } catch (err) {\n    // Log just in case not internationalized\n    console.error(Nogin._('ErrorFormat', {\n      text: err.text,\n      statusText:\n        // istanbul ignore next\n        err.statusText ||\n        ''\n    }));\n    // However, should already be internationalized by server\n    showLockedErrorAlert({message: err.text});\n  }\n});\n\nconst logoutButton = HomeView.getLogoutButton();\n// handle user logout\nlogoutButton.click(async () => {\n  try {\n    await attemptLogout();\n  } catch (err) {\n    // Log in case actual error not internationalized\n    console.error(Nogin._('ErrorFormat', {\n      text: err.text,\n      statusText:\n        // istanbul ignore next\n        err.statusText ||\n        ''\n    }));\n    showLockedErrorAlert({type: 'ErrorLoggingOut'});\n  }\n});\n\n// confirm account deletion\nconst accountForm = HomeView.setAccountSettings();\nHomeView.getDeleteAccountAction(accountForm).click(() => {\n  deleteAccountConfirmDialog.modal('show');\n});\nsetupValidationSubmission();\n\n/**\n * @returns {boolean}\n */\nfunction emailHasChanged () {\n  const email = HomeView.getEmail();\n  return email[0].value !== email[0].defaultValue;\n}\n\n/**\n * @returns {void}\n */\nfunction setupValidationSubmission () {\n  let confirmed = false;\n  const av = new AccountValidator();\n  accountForm[0].addEventListener('submit', (e) => {\n    const submissionOkToContinue = confirmed ||\n      !emailHasChanged();\n    if (submissionOkToContinue) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const emailChangeConfirmDialog = HomeView.onShowConfirmation({\n      type: 'AppearsChangingEmail'\n    });\n    emailChangeConfirmDialog.modal('show');\n    ConfirmDialog.getAccountSubmit(emailChangeConfirmDialog).click(() => {\n      confirmed = true;\n      accountForm.submit();\n      emailChangeConfirmDialog.modal('hide');\n    });\n  }, true);\n  ajaxFormClientSideValidate(accountForm, {\n    validate () {\n      av.validateForm();\n    },\n    beforeSubmit (formData, jqForm, options) {\n      // Push the disabled username field onto the form data array\n      formData.push({\n        name: 'user', value: user.val()\n      });\n      return true;\n    },\n    success (responseText, status, xhr, $form) {\n      // \"nocontent\" (204), \"notmodified\" (304), \"parseerror\" (JSON or XML)\n      // istanbul ignore else\n      if (status === 'success') {\n        onUpdateSuccess();\n      }\n      confirmed = false; // Allow resubmission\n    },\n    error (e) {\n      confirmed = false; // Allow resubmission\n      switch (e.responseText) {\n      case 'email-taken':\n        av.showInvalidEmail();\n        break;\n      case 'session-lost': {\n        showLockedErrorAlert({type: 'SessionLost'});\n        break;\n      } case 'problem-dispatching-link': {\n        showLockedErrorAlert({type: 'ProblemDispatchingLink'});\n        break;\n      } default:\n        HomeView.onShowLockedErrorAlert({type: 'FailureSubmittingUserInfo'});\n        break;\n      }\n    }\n  });\n}\n\n/**\n * @returns {void}\n */\nfunction onUpdateSuccess () {\n  const accountUpdatedAlertDialog = emailHasChanged()\n    ? HomeView.onAccountUpdatedButNotYetEmail()\n    : HomeView.onAccountUpdated();\n  accountUpdatedAlertDialog.modal('show');\n  HomeView.getAccountUpdatedButton(accountUpdatedAlertDialog).off('click');\n}\n\n/**\n * @param {string} url\n * @returns {Promise<void>}\n */\nfunction post (url) {\n  // eslint-disable-next-line promise/avoid-new\n  return new Promise((resolve, reject) => {\n    $.ajax(url, {type: 'post'}).done(resolve).fail(\n      (jqXHR /* , textStatus, errorThrown */) => {\n        const err = new Error('Ajax POST error');\n        err.text = jqXHR.responseText;\n        err.responseText = jqXHR.statusText;\n        reject(err);\n      }\n    );\n  });\n  // Reenable after these related issues are fixed:\n  // https://github.com/cypress-io/cypress/issues/95\n  // https://github.com/cypress-io/cypress/issues/687\n  /*\n  const resp = await fetch(url, {\n    method: 'POST'\n  });\n  await checkErrors(resp);\n  */\n  /**\n   * @param {Response} resp\n   * @throws {Error}\n   * @returns {Promise<void>}\n   */\n  /*\n  async function checkErrors (resp) {\n    if (!resp.ok) {\n      const err = new Error();\n      err.text = await resp.text();\n      err.responseText = resp.statusText;\n      throw err;\n    }\n  }\n  */\n}\n\n/**\n * @throws {Error}\n * @returns {Promise<void>}\n */\nasync function deleteAccount () {\n  deleteAccountConfirmDialog.modal('hide');\n  await post(Nogin.Routes.delete);\n  showLockedAlert({type: 'accountDeleted'});\n}\n\n/**\n * @throws {Error}\n * @returns {Promise<void>}\n */\nasync function attemptLogout () {\n  await post(Nogin.Routes.logout);\n  showLockedAlert({type: 'loggedOut'});\n}\n\n/**\n * @param {PlainObject} cfg\n * @param {\"accountDeleted\"|\"loggedOut\"} cfg.type\n * @returns {void}\n */\nfunction showLockedAlert ({type}) {\n  const lockedAlertDialog = HomeView.onShowLockedAlert({type});\n  lockedAlertDialog.modal('show');\n  const redirectToRoot = () => {\n    Nogin.redirect('root');\n  };\n  HomeView.getLockedAlertButton(lockedAlertDialog).click(redirectToRoot);\n  setTimeout(redirectToRoot, 3000);\n}\n\n/**\n * @param {PlainObject} cfg\n * @param {\"ErrorLoggingOut\"} cfg.type\n * @param {string} cfg.message\n * @returns {void}\n*/\nfunction showLockedErrorAlert ({type, message}) {\n  const lockedAlertDialog = HomeView.onShowLockedErrorAlert({type, message});\n  lockedAlertDialog.modal('show');\n  const redirectToRoot = () => {\n    Nogin.redirect('root');\n  };\n  HomeView.getLockedAlertButton(lockedAlertDialog).click(redirectToRoot);\n  setTimeout(redirectToRoot, 3000);\n}\n"],"names":["Error","window","consoleShim","console","noop","forEach","prop","ConfirmDialog","type","header","body","cancel","submit","baseSel","$","modal","show","keyboard","backdrop","text","empty","append","confirmDialog","find","AlertDialog","heading","_","Nogin","lockedAlert","message","lb","HomeView","accountForm","lockedAlertDialog","accountUpdatedAlertDialog","deleteAccountConfirmDialog","addClass","sel","subheading","action1","action2","removeClass","AccountValidatorView","getForm","getUserId","getFormFields","name","email","user","pass","passConfirm","errorMessages","PleaseEnterName","emailAddressAlreadyInUse","PleaseEnterValidEmail","userNameAlreadyInUse","PleaseChooseUserName","PasswordMinimumLength","PasswordsDontMatch","AccountValidator","signup","form","formFields","userId","userIsLoggedIn","s","_this","val","setCustomValidity","this","reportValidity","Object","values","field","validity","tooShort","patternMismatch","value","_empty","_await","then","direct","Promise","resolve","attemptLogout","post","Routes","logout","showLockedAlert","deleteAccount","result","e","reject","_call","recover","f","args","i","arguments","length","apply","focus","attr","click","err","error","statusText","showLockedErrorAlert","confirmed","av","validate","url","beforeSubmit","success","emailHasChanged","defaultValue","ajax","done","fail","jqXHR","responseText","redirectToRoot","redirect","setTimeout","addEventListener","preventDefault","stopPropagation","emailChangeConfirmDialog","validateForm","formData","jqForm","options","push","status","xhr","$form","off","showInvalidEmail","target","checkValidity","ajaxForm"],"mappings":"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"}