{"version":3,"file":"homeController.iife.min.js","sources":["../polyfills/Error.js","../polyfills/console.js","../utilities/ajaxFormClientSideValidate.js","../views/utilities/ConfirmDialog.js","../views/utilities/AlertDialog.js","../views/home.js","../views/utilities/populateForm.js","../views/validators/AccountValidatorView.js","../form-validators/AccountValidator.js","homeController.js"],"sourcesContent":["/* eslint-disable no-restricted-globals, no-shadow */\n// For IE 5.5 (needed per `eslint-plugin-compat`)\nif (typeof Error === 'undefined') {\n  /**\n   * Error polyfill.\n   */\n  window.Error = class Error {};\n}\n","// No-op shim for Opera 9 and IE 5.5 (needed per `eslint-plugin-compat`)\nconst consoleShim = typeof console === 'undefined'\n  ? {}\n  : console;\n\nconst noop = () => {\n  // No-op\n};\n\n['error', 'log'].forEach((prop) => {\n  if (!consoleShim[prop]) {\n    consoleShim[prop] = noop;\n  }\n});\n\nexport default consoleShim;\n","/* globals $, Nogin */\n\n// Note: This per-request approach suffers from the possibility that the\n//   may subsequently open a page from the site with nogin in another tab\n//   where that page sets a new, different token meta expectation to a\n//   new value and this will thereby become invalid.\nconst xsrfCookie = $('meta[name=\"csrf-token\"]').attr('content');\n\nconst ajaxFormClientSideValidate = (form, {\n  validate,\n  // `ajaxForm` properties and methods\n  url,\n  beforeSubmit,\n  success,\n  error,\n  checkXSRF = true\n}) => {\n  // As per problem #3 at https://www.html5rocks.com/en/tutorials/forms/constraintvalidation/#toc-current-implementation-issues ,\n  //  we can't do the validation at submit, so we instead add a capturing\n  //  change listener as well as input listeners to reset the messages;\n  //  note that we can't use the `invalid` event to call `reportValidity`\n  //  after our `setCustomValidity()` (to ensure we get the bubbles showing)\n  //  as that fires further `invalid` events; and setting the form to\n  //  `novalidate` won't show the bubbles.\n  form[0].addEventListener('change', (e) => {\n    // Provide custom messages of invalidity\n    validate(e);\n  }, true);\n\n  form[0].addEventListener('input', ({target: field}) => {\n    field.setCustomValidity('');\n    field.checkValidity('');\n  }, true);\n\n  // istanbul ignore if\n  if (checkXSRF && !xsrfCookie && !Nogin.disableXSRF) {\n    error({responseText: 'UnknownError'});\n    return;\n  }\n\n  form.ajaxForm({\n    headers: {\n      // `$.ajaxForm` will auto-check for special `meta` tags to add XSRF\n      //   data, but we avoid the extra meta it requires by sending on the\n      //   header.\n      'X-XSRF-Token': xsrfCookie\n    },\n    url,\n    beforeSubmit,\n    success,\n    error\n  });\n};\n\nexport default ajaxFormClientSideValidate;\n","/* globals $ */\n\nconst ConfirmDialog = {\n  populate ({\n    type,\n    header,\n    body,\n    cancel,\n    submit\n  }) {\n    const baseSel = `[data-confirm-type=\"${type}\"][data-name=modal-confirm]`;\n    $(baseSel).modal({\n      show: false, keyboard: true, backdrop: true\n    });\n    $(`${baseSel} .modal-header [data-name=modal-title]`).text(\n      header\n    );\n    $(`${baseSel} [data-name=modal-body] p`).empty().append(\n      body\n    );\n    $(`${baseSel} .cancel`).text(cancel).click(() => {\n      $(baseSel).modal('hide');\n    });\n    $(`${baseSel} .submit`).text(submit);\n    return $(baseSel);\n  },\n\n  /**\n   * @param {external:jQuery} confirmDialog\n   * @returns {external:jQuery}\n   */\n  getAccountSubmit (confirmDialog) {\n    return confirmDialog.find('.submit');\n  }\n};\n\nexport default ConfirmDialog;\n","/* globals $ */\n\nconst AlertDialog = {\n  /**\n   * @param {PlainObject} cfg\n   * @param {string} cfg.heading\n   * @param {external:jQuery} cfg.body\n   * @param {boolean} cfg.keyboard\n   * @param {boolean|\"static\"} cfg.backdrop\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  populate ({\n    heading,\n    body,\n    keyboard,\n    backdrop\n  }) {\n    const modal = $('[data-name=modal-alert]').modal({\n      show: false, keyboard, backdrop\n    });\n    $('[data-name=modal-alert] .modal-header [data-name=modal-title]').text(\n      heading\n    );\n    $('[data-name=modal-alert] [data-name=modal-body] p').empty().append(body);\n    $('[data-name=modal-alert] button').click((e) => {\n      e.preventDefault();\n      modal.modal('hide');\n    });\n    return modal;\n  }\n};\n\nexport default AlertDialog;\n","/* globals $, Nogin */\n\nimport ConfirmDialog from './utilities/ConfirmDialog.js';\nimport AlertDialog from './utilities/AlertDialog.js';\nimport populateForm from './utilities/populateForm.js';\n\nconst {_} = Nogin;\n\n/**\n * @param {PlainObject} cfg\n * @param {string} [cfg.message]\n * @param {string} [cfg.type]\n * @param {\"error\"|\"success\"} [cfg.heading]\n * @returns {external:jQuery} `HTMLDivElement`\n */\nfunction lockedAlert ({type, message, heading}) {\n  return AlertDialog.populate({\n    heading: _(heading),\n    body: message || _(type, {\n      lb: $('<br/>')[0]\n    }),\n    keyboard: false,\n    backdrop: 'static'\n  });\n}\n\nconst HomeView = {\n  /**\n   * @returns {external:jQuery}\n   */\n  getLogoutButton () {\n    return $('[data-name=btn-logout]');\n  },\n  /**\n   * @returns {external:jQuery}\n   */\n  getName () {\n    return $('[data-name=\"name\"]');\n  },\n\n  /**\n   * @returns {external:jQuery}\n   */\n  getEmail () {\n    return $('[data-name=\"email\"]');\n  },\n\n  /**\n   * @param {external:jQuery} accountForm\n   * @returns {external:jQuery}\n   */\n  getDeleteAccountAction (accountForm) {\n    return accountForm.find('[data-name=action1]');\n  },\n\n  /**\n   * @param {external:jQuery} lockedAlertDialog\n   * @returns {external:jQuery} `HTMLButtonElement`\n   */\n  getLockedAlertButton (lockedAlertDialog) {\n    return lockedAlertDialog.find('button');\n  },\n\n  /**\n   * @param {external:jQuery} accountUpdatedAlertDialog\n   * @returns {external:jQuery} `HTMLButtonElement`\n   */\n  getAccountUpdatedButton (accountUpdatedAlertDialog) {\n    return accountUpdatedAlertDialog.find('button');\n  },\n\n  /**\n   * @returns {external:jQuery}\n   */\n  getUser () {\n    return $('[data-name=\"user\"]');\n  },\n\n  /**\n   * @param {PlainObject} cfg\n   * @param {\"AppearsChangingEmail\"} cfg.type\n   * @returns {external:jQuery} `HTMLDivElement`\n  */\n  onShowConfirmation ({type}) {\n    return ConfirmDialog.populate({\n      type: 'notice',\n      header: _('notice'),\n      body: _(type, {\n        lb: $('<br/>')[0]\n      }),\n      cancel: _('cancel'),\n      submit: _('confirm')\n    });\n  },\n\n  /**\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  setDeleteAccount () {\n    // setup the confirm window that displays when the user chooses to\n    //  delete their account\n    const deleteAccountConfirmDialog = ConfirmDialog.populate({\n      type: 'deleteAccount',\n      header: _('deleteAccount'),\n      body: _('sureWantDeleteAccount'),\n      cancel: _('cancel'),\n      submit: _('delete')\n    });\n    deleteAccountConfirmDialog.find('.submit').addClass('btn-danger');\n    return deleteAccountConfirmDialog;\n  },\n  /**\n   * @returns {external:jQuery} `HTMLFormElement`\n   */\n  setAccountSettings () {\n    const accountForm = populateForm('[data-name=account-form]', {\n      heading: _('accountSettings'),\n      subheading: _('hereAreCurrentSettings'),\n      action1: _('deleteText'),\n      action2: _('updateText')\n    });\n    accountForm.find('[data-name=action1]')\n      .removeClass('btn-outline-dark')\n      .addClass('btn-danger');\n    return accountForm;\n  },\n  /**\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  onAccountUpdated () {\n    return AlertDialog.populate({\n      heading: _('success'),\n      body: _('yourAccountHasBeenUpdated'),\n      keyboard: true,\n      backdrop: true\n    });\n  },\n\n  /**\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  onAccountUpdatedButNotYetEmail () {\n    return AlertDialog.populate({\n      heading: _('success'),\n      body: _('yourAccountHasBeenUpdatedButEmail'),\n      keyboard: true,\n      backdrop: true\n    });\n  },\n\n  /**\n   * @param {PlainObject} cfg\n   * @param {\"accountDeleted\"|\"loggedOut\"} cfg.type\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  onShowLockedAlert ({type}) {\n    return lockedAlert({type, heading: 'success'});\n  },\n\n  /**\n   * @param {PlainObject} cfg\n   * @param {string} [cfg.message]\n   * @param {\"ErrorLoggingOut\"|\"FailureSubmittingUserInfo\"|\n   * \"SessionLost\"|\"ProblemDispatchingLink\"} [cfg.type]\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  onShowLockedErrorAlert ({type, message}) {\n    return lockedAlert({type, message, heading: 'error'});\n  }\n};\n\nexport default HomeView;\n","/* globals $ */\n\nconst populateForm = (sel, {\n  heading,\n  subheading,\n  action1,\n  action2\n}) => {\n  // customize the account settings form\n  $(sel + ' h1.dialog').text(heading);\n  $(sel + ' h2.dialog').text(subheading);\n  $(sel + ' [data-name=action1]').text(action1);\n  $(sel + ' [data-name=action2]').text(action2);\n  return $(sel);\n};\n\nexport default populateForm;\n","/* globals $, Nogin */\n\nconst {_} = Nogin;\n\n/**\n* @typedef {PlainObject} AccountInfoElements\n* @property {external:jQuery} name\n* @property {external:jQuery} email\n* @property {external:jQuery} user\n* @property {external:jQuery} pass\n*/\n\nconst AccountValidatorView = {\n  /**\n   * @returns {HTMLFormElement}\n   */\n  getForm () {\n    return $('[data-name=account-form]')[0];\n  },\n\n  /**\n   * @returns {external:jQuery}\n   */\n  getUserId () {\n    return $('#userId');\n  },\n\n  /**\n   * @returns {AccountInfoElements}\n   */\n  getFormFields () {\n    return {\n      name: $('[data-name=\"name\"]')[0],\n      email: $('[data-name=\"email\"]')[0],\n      user: $('[data-name=\"user\"]')[0],\n      pass: $('[data-name=\"pass\"]')[0],\n      passConfirm: $('[data-name=\"pass-confirm\"]') &&\n        $('[data-name=\"pass-confirm\"]')[0]\n    };\n  },\n\n  /**\n   * @type {PlainObject<string,PlainObject<string,string>>}\n   */\n  errorMessages: {\n    name: {\n      PleaseEnterName: _('PleaseEnterName')\n    },\n    email: {\n      emailAddressAlreadyInUse: _('emailAddressAlreadyInUse'),\n      PleaseEnterValidEmail: _('PleaseEnterValidEmail')\n    },\n    user: {\n      userNameAlreadyInUse: _('userNameAlreadyInUse'),\n      PleaseChooseUserName: _('PleaseChooseUserName')\n    },\n    pass: {\n      PasswordMinimumLength: _('PasswordMinimumLength'),\n      PasswordsDontMatch: _('PasswordsDontMatch')\n    }\n  }\n};\n\nexport default AccountValidatorView;\n","import AccountValidatorView from '../views/validators/AccountValidatorView.js';\n\n/**\n * Ensures accounts are valid.\n */\nclass AccountValidator {\n  /**\n   * Sets up properties and methods.\n   * @param {PlainObject} cfg\n   * @param {boolean} cfg.signup\n   */\n  constructor ({signup} = {}) {\n    // build array maps of the form inputs & control groups\n    this.signup = signup;\n\n    this.form = AccountValidatorView.getForm();\n    this.formFields = AccountValidatorView.getFormFields();\n    this.userId = AccountValidatorView.getUserId();\n    this.errorMessages = AccountValidatorView.errorMessages;\n\n    this.userIsLoggedIn = (s) => {\n      // if user is logged in and hasn't changed their password, return ok\n      return this.userId.val() && s === '';\n    };\n  }\n\n  /**\n   * @returns {void}\n   */\n  showInvalidEmail () {\n    this.formFields.email.setCustomValidity(\n      this.errorMessages.email.emailAddressAlreadyInUse\n    );\n    this.form.reportValidity();\n  }\n\n  /**\n   * @returns {void}\n   */\n  showInvalidUserName () {\n    this.formFields.user.setCustomValidity(\n      this.errorMessages.user.userNameAlreadyInUse\n    );\n    this.form.reportValidity();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  validateForm () {\n    const {name, email, user, pass, passConfirm} = this.formFields;\n    Object.values(this.formFields).forEach((field) => {\n      if (field) {\n        field.setCustomValidity('');\n      }\n    });\n    // todo[cypress@>9.0.0]: validity: remove this disabling of istanbul\n    //  to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (name.validity.tooShort) {\n      name.setCustomValidity(this.errorMessages.name.PleaseEnterName);\n    }\n    // todo[cypress@>9.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (email.validity.patternMismatch) {\n      email.setCustomValidity(this.errorMessages.email.PleaseEnterValidEmail);\n    }\n    // todo[cypress@>9.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (user.validity.tooShort) {\n      user.setCustomValidity(this.errorMessages.user.PleaseChooseUserName);\n    }\n    // todo[cypress@>9.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (!this.userIsLoggedIn() && pass.validity.tooShort) {\n      pass.setCustomValidity(this.errorMessages.pass.PasswordMinimumLength);\n    }\n    if (this.signup && pass.value !== passConfirm.value) {\n      pass.setCustomValidity(this.errorMessages.pass.PasswordsDontMatch);\n    }\n    return this.form.reportValidity();\n  }\n}\n\nexport default AccountValidator;\n","/* globals $, Nogin */\n\nimport '../polyfills/Error.js';\nimport '../polyfills/console.js';\n\nimport ajaxFormClientSideValidate from\n  '../utilities/ajaxFormClientSideValidate.js';\n\nimport ConfirmDialog from '../views/utilities/ConfirmDialog.js';\nimport HomeView from '../views/home.js';\nimport AccountValidator from '../form-validators/AccountValidator.js';\n\nconst xsrfCookie = $('meta[name=\"csrf-token\"]').attr('content');\n\n// User name field\nconst name = HomeView.getName();\nname.focus();\n\n// Disable user field\nconst user = HomeView.getUser();\nuser.attr('disabled', 'disabled');\n\n// handle account deletion\nconst deleteAccountConfirmDialog = HomeView.setDeleteAccount();\nConfirmDialog.getAccountSubmit(deleteAccountConfirmDialog).click(async () => {\n  try {\n    await deleteAccount();\n  } catch (err) {\n    // Log just in case not internationalized\n    console.error(Nogin._('ErrorFormat', {\n      text: err.text,\n      statusText:\n        // istanbul ignore next\n        err.statusText ||\n        ''\n    }));\n    // However, should already be internationalized by server\n    showLockedErrorAlert({message: err.text});\n  }\n});\n\nconst logoutButton = HomeView.getLogoutButton();\n// handle user logout\nlogoutButton.click(async () => {\n  try {\n    await attemptLogout();\n  } catch (err) {\n    // Log in case actual error not internationalized\n    console.error(Nogin._('ErrorFormat', {\n      text: err.text,\n      statusText:\n        // istanbul ignore next\n        err.statusText ||\n        ''\n    }));\n    showLockedErrorAlert({type: 'ErrorLoggingOut'});\n  }\n});\n\n// confirm account deletion\nconst accountForm = HomeView.setAccountSettings();\nHomeView.getDeleteAccountAction(accountForm).click(() => {\n  deleteAccountConfirmDialog.modal('show');\n});\nsetupValidationSubmission();\n\n/**\n * @returns {boolean}\n */\nfunction emailHasChanged () {\n  const email = HomeView.getEmail();\n  return email[0].value !== email[0].defaultValue;\n}\n\n/**\n * @returns {void}\n */\nfunction setupValidationSubmission () {\n  let confirmed = false;\n  const av = new AccountValidator();\n  accountForm[0].addEventListener('submit', (e) => {\n    const submissionOkToContinue = confirmed ||\n      !emailHasChanged();\n    if (submissionOkToContinue) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const emailChangeConfirmDialog = HomeView.onShowConfirmation({\n      type: 'AppearsChangingEmail'\n    });\n    emailChangeConfirmDialog.modal('show');\n    ConfirmDialog.getAccountSubmit(emailChangeConfirmDialog).click(() => {\n      confirmed = true;\n      accountForm.submit();\n      emailChangeConfirmDialog.modal('hide');\n    });\n  }, true);\n  ajaxFormClientSideValidate(accountForm, {\n    validate () {\n      av.validateForm();\n    },\n    beforeSubmit (formData, jqForm, options) {\n      // Push the disabled username field onto the form data array\n      formData.push({\n        name: 'user', value: user.val()\n      });\n      return true;\n    },\n    success (responseText, status, xhr, $form) {\n      // \"nocontent\" (204), \"notmodified\" (304), \"parseerror\" (JSON or XML)\n      // istanbul ignore else\n      if (status === 'success') {\n        onUpdateSuccess();\n      }\n      confirmed = false; // Allow resubmission\n    },\n    error (e) {\n      confirmed = false; // Allow resubmission\n      switch (e.responseText) {\n      case 'email-taken':\n        av.showInvalidEmail();\n        break;\n      case 'session-lost': {\n        showLockedErrorAlert({type: 'SessionLost'});\n        break;\n      } case 'problem-dispatching-link': {\n        showLockedErrorAlert({type: 'ProblemDispatchingLink'});\n        break;\n      } default:\n        HomeView.onShowLockedErrorAlert({type: 'FailureSubmittingUserInfo'});\n        break;\n      }\n    }\n  });\n}\n\n/**\n * @returns {void}\n */\nfunction onUpdateSuccess () {\n  const accountUpdatedAlertDialog = emailHasChanged()\n    ? HomeView.onAccountUpdatedButNotYetEmail()\n    : HomeView.onAccountUpdated();\n  accountUpdatedAlertDialog.modal('show');\n}\n\n/**\n * @param {string} url\n * @returns {Promise<void>}\n */\nfunction post (url) {\n  // eslint-disable-next-line promise/avoid-new\n  return new Promise((resolve, reject) => {\n    $.ajax(url, {\n      type: 'post',\n      headers: {\n        'X-XSRF-Token': xsrfCookie\n      }\n    }).done(resolve).fail(\n      (jqXHR /* , textStatus, errorThrown */) => {\n        const err = new Error('Ajax POST error');\n        err.text = jqXHR.responseText;\n        err.responseText = jqXHR.statusText;\n        reject(err);\n      }\n    );\n  });\n  // Reenable after these related issues are fixed:\n  // https://github.com/cypress-io/cypress/issues/95\n  // https://github.com/cypress-io/cypress/issues/687\n  /*\n  const resp = await fetch(url, {\n    method: 'POST'\n  });\n  await checkErrors(resp);\n  */\n  /**\n   * @param {Response} resp\n   * @throws {Error}\n   * @returns {Promise<void>}\n   */\n  /*\n  async function checkErrors (resp) {\n    if (!resp.ok) {\n      const err = new Error();\n      err.text = await resp.text();\n      err.responseText = resp.statusText;\n      throw err;\n    }\n  }\n  */\n}\n\n/**\n * @throws {Error}\n * @returns {Promise<void>}\n */\nasync function deleteAccount () {\n  deleteAccountConfirmDialog.modal('hide');\n  await post(Nogin.Routes.delete);\n  showLockedAlert({type: 'accountDeleted'});\n}\n\n/**\n * @throws {Error}\n * @returns {Promise<void>}\n */\nasync function attemptLogout () {\n  await post(Nogin.Routes.logout);\n  showLockedAlert({type: 'loggedOut'});\n}\n\n/**\n * @param {PlainObject} cfg\n * @param {\"accountDeleted\"|\"loggedOut\"} cfg.type\n * @returns {void}\n */\nfunction showLockedAlert ({type}) {\n  const lockedAlertDialog = HomeView.onShowLockedAlert({type});\n  lockedAlertDialog.modal('show');\n  const redirectToRoot = () => {\n    Nogin.redirect('root');\n  };\n  HomeView.getLockedAlertButton(lockedAlertDialog).click(redirectToRoot);\n  setTimeout(redirectToRoot, 3000);\n}\n\n/**\n * @param {PlainObject} cfg\n * @param {\"ErrorLoggingOut\"} cfg.type\n * @param {string} cfg.message\n * @returns {void}\n*/\nfunction showLockedErrorAlert ({type, message}) {\n  const lockedAlertDialog = HomeView.onShowLockedErrorAlert({type, message});\n  lockedAlertDialog.modal('show');\n  const redirectToRoot = () => {\n    Nogin.redirect('root');\n  };\n  HomeView.getLockedAlertButton(lockedAlertDialog).click(redirectToRoot);\n  setTimeout(redirectToRoot, 3000);\n}\n"],"names":["Error","window","consoleShim","console","noop","forEach","prop","xsrfCookie","$","attr","ConfirmDialog","type","header","body","cancel","submit","baseSel","modal","show","keyboard","backdrop","text","empty","append","click","confirmDialog","find","AlertDialog","heading","e","preventDefault","_","Nogin","lockedAlert","message","lb","HomeView","accountForm","lockedAlertDialog","deleteAccountConfirmDialog","addClass","sel","subheading","action1","action2","removeClass","AccountValidatorView","getForm","getUserId","getFormFields","name","email","user","pass","passConfirm","errorMessages","PleaseEnterName","emailAddressAlreadyInUse","PleaseEnterValidEmail","userNameAlreadyInUse","PleaseChooseUserName","PasswordMinimumLength","PasswordsDontMatch","AccountValidator","signup","form","formFields","userId","userIsLoggedIn","s","_this","val","setCustomValidity","this","reportValidity","Object","values","field","validity","tooShort","patternMismatch","value","_empty","_await","then","direct","Promise","resolve","attemptLogout","post","Routes","logout","showLockedAlert","deleteAccount","result","reject","_call","recover","f","args","i","arguments","length","apply","focus","err","error","statusText","showLockedErrorAlert","confirmed","av","validate","url","beforeSubmit","success","checkXSRF","emailHasChanged","defaultValue","ajax","headers","done","fail","jqXHR","responseText","redirectToRoot","redirect","setTimeout","addEventListener","stopPropagation","emailChangeConfirmDialog","validateForm","formData","jqForm","options","push","status","xhr","$form","showInvalidEmail","target","checkValidity","disableXSRF","ajaxForm"],"mappings":"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"}