{"version":3,"file":"homeController.iife.min.js","sources":["../polyfills/Error.js","../polyfills/console.js","../utilities/ajaxFormClientSideValidate.js","../views/utilities/ConfirmDialog.js","../views/utilities/AlertDialog.js","../views/home.js","../views/utilities/populateForm.js","../views/validators/AccountValidatorView.js","../form-validators/AccountValidator.js","homeController.js"],"sourcesContent":["/* eslint-disable no-restricted-globals, no-shadow */\n// For IE 5.5 (needed per `eslint-plugin-compat`)\nif (typeof Error === 'undefined') {\n  /**\n   * Error polyfill.\n   */\n  window.Error = class Error {};\n}\n","// No-op shim for Opera 9 and IE 5.5 (needed per `eslint-plugin-compat`)\nconst consoleShim = typeof console === 'undefined'\n  ? {}\n  : console;\n\nconst noop = () => {\n  // No-op\n};\n\n['error', 'log'].forEach((prop) => {\n  if (!consoleShim[prop]) {\n    consoleShim[prop] = noop;\n  }\n});\n\nexport default consoleShim;\n","/* globals $, Nogin */\n\n// Note: This per-request approach suffers from the possibility that the\n//   may subsequently open a page from the site with nogin in another tab\n//   where that page sets a new, different token meta expectation to a\n//   new value and this will thereby become invalid.\nconst xsrfCookie = $('meta[name=\"csrf-token\"]').attr('content');\n\nconst ajaxFormClientSideValidate = (form, {\n  validate,\n  // `ajaxForm` properties and methods\n  url,\n  beforeSubmit,\n  success,\n  error,\n  checkXSRF = true\n}) => {\n  // As per problem #3 at https://www.html5rocks.com/en/tutorials/forms/constraintvalidation/#toc-current-implementation-issues ,\n  //  we can't do the validation at submit, so we instead add a capturing\n  //  change listener as well as input listeners to reset the messages;\n  //  note that we can't use the `invalid` event to call `reportValidity`\n  //  after our `setCustomValidity()` (to ensure we get the bubbles showing)\n  //  as that fires further `invalid` events; and setting the form to\n  //  `novalidate` won't show the bubbles.\n  form[0].addEventListener('change', (e) => {\n    // Provide custom messages of invalidity\n    validate(e);\n  }, true);\n\n  form[0].addEventListener('input', ({target: field}) => {\n    field.setCustomValidity('');\n    field.checkValidity('');\n  }, true);\n\n  // istanbul ignore if\n  if (checkXSRF && !xsrfCookie && !Nogin.disableXSRF) {\n    error({responseText: 'UnknownError'});\n    return;\n  }\n\n  form.ajaxForm({\n    headers: {\n      // `$.ajaxForm` will auto-check for special `meta` tags to add XSRF\n      //   data, but we avoid the extra meta it requires by sending on the\n      //   header.\n      'X-XSRF-Token': xsrfCookie\n    },\n    url,\n    beforeSubmit,\n    success,\n    error\n  });\n};\n\nexport default ajaxFormClientSideValidate;\n","/* globals $ */\n\nconst ConfirmDialog = {\n  populate ({\n    type,\n    header,\n    body,\n    cancel,\n    submit\n  }) {\n    const baseSel = `[data-confirm-type=\"${type}\"][data-name=modal-confirm]`;\n    $(baseSel).modal({\n      show: false, keyboard: true, backdrop: true\n    });\n    $(`${baseSel} .modal-header [data-name=modal-title]`).text(\n      header\n    );\n    $(`${baseSel} [data-name=modal-body] p`).empty().append(\n      body\n    );\n    $(`${baseSel} .cancel`).text(cancel).click(() => {\n      $(baseSel).modal('hide');\n    });\n    $(`${baseSel} .submit`).text(submit);\n    return $(baseSel);\n  },\n\n  /**\n   * @param {external:jQuery} confirmDialog\n   * @returns {external:jQuery}\n   */\n  getAccountSubmit (confirmDialog) {\n    return confirmDialog.find('.submit');\n  }\n};\n\nexport default ConfirmDialog;\n","/* globals $ */\n\nconst AlertDialog = {\n  /**\n   * @param {PlainObject} cfg\n   * @param {string} cfg.heading\n   * @param {external:jQuery} cfg.body\n   * @param {boolean} cfg.keyboard\n   * @param {boolean|\"static\"} cfg.backdrop\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  populate ({\n    heading,\n    body,\n    keyboard,\n    backdrop\n  }) {\n    const modal = $('[data-name=modal-alert]').modal({\n      show: false, keyboard, backdrop\n    });\n    $('[data-name=modal-alert] .modal-header [data-name=modal-title]').text(\n      heading\n    );\n    $('[data-name=modal-alert] [data-name=modal-body] p').empty().append(body);\n    $('[data-name=modal-alert] button').click((e) => {\n      e.preventDefault();\n      modal.modal('hide');\n    });\n    return modal;\n  }\n};\n\nexport default AlertDialog;\n","/* globals $, Nogin */\n\nimport ConfirmDialog from './utilities/ConfirmDialog.js';\nimport AlertDialog from './utilities/AlertDialog.js';\nimport populateForm from './utilities/populateForm.js';\n\nconst {_} = Nogin;\n\n/**\n * @param {PlainObject} cfg\n * @param {string} [cfg.message]\n * @param {string} [cfg.type]\n * @param {\"error\"|\"success\"} [cfg.heading]\n * @returns {external:jQuery} `HTMLDivElement`\n */\nfunction lockedAlert ({type, message, heading}) {\n  return AlertDialog.populate({\n    heading: _(heading),\n    body: message || _(type, {\n      lb: $('<br/>')[0]\n    }),\n    keyboard: false,\n    backdrop: 'static'\n  });\n}\n\nconst HomeView = {\n  /**\n   * @returns {external:jQuery}\n   */\n  getLogoutButton () {\n    return $('[data-name=btn-logout]');\n  },\n  /**\n   * @returns {external:jQuery}\n   */\n  getName () {\n    return $('[data-name=\"name\"]');\n  },\n\n  /**\n   * @returns {external:jQuery}\n   */\n  getEmail () {\n    return $('[data-name=\"email\"]');\n  },\n\n  /**\n   * @param {external:jQuery} accountForm\n   * @returns {external:jQuery}\n   */\n  getDeleteAccountAction (accountForm) {\n    return accountForm.find('[data-name=action1]');\n  },\n\n  /**\n   * @param {external:jQuery} lockedAlertDialog\n   * @returns {external:jQuery} `HTMLButtonElement`\n   */\n  getLockedAlertButton (lockedAlertDialog) {\n    return lockedAlertDialog.find('button');\n  },\n\n  /**\n   * @param {external:jQuery} accountUpdatedAlertDialog\n   * @returns {external:jQuery} `HTMLButtonElement`\n   */\n  getAccountUpdatedButton (accountUpdatedAlertDialog) {\n    return accountUpdatedAlertDialog.find('button');\n  },\n\n  /**\n   * @returns {external:jQuery}\n   */\n  getUser () {\n    return $('[data-name=\"user\"]');\n  },\n\n  /**\n   * @param {PlainObject} cfg\n   * @param {\"AppearsChangingEmail\"} cfg.type\n   * @returns {external:jQuery} `HTMLDivElement`\n  */\n  onShowConfirmation ({type}) {\n    return ConfirmDialog.populate({\n      type: 'notice',\n      header: _('notice'),\n      body: _(type, {\n        lb: $('<br/>')[0]\n      }),\n      cancel: _('cancel'),\n      submit: _('confirm')\n    });\n  },\n\n  /**\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  setDeleteAccount () {\n    // setup the confirm window that displays when the user chooses to\n    //  delete their account\n    const deleteAccountConfirmDialog = ConfirmDialog.populate({\n      type: 'deleteAccount',\n      header: _('deleteAccount'),\n      body: _('sureWantDeleteAccount'),\n      cancel: _('cancel'),\n      submit: _('delete')\n    });\n    deleteAccountConfirmDialog.find('.submit').addClass('btn-danger');\n    return deleteAccountConfirmDialog;\n  },\n  /**\n   * @returns {external:jQuery} `HTMLFormElement`\n   */\n  setAccountSettings () {\n    const accountForm = populateForm('[data-name=account-form]', {\n      heading: _('accountSettings'),\n      subheading: _('hereAreCurrentSettings'),\n      action1: _('deleteText'),\n      action2: _('updateText')\n    });\n    accountForm.find('[data-name=action1]')\n      .removeClass('btn-outline-dark')\n      .addClass('btn-danger');\n    return accountForm;\n  },\n  /**\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  onAccountUpdated () {\n    return AlertDialog.populate({\n      heading: _('success'),\n      body: _('yourAccountHasBeenUpdated'),\n      keyboard: true,\n      backdrop: true\n    });\n  },\n\n  /**\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  onAccountUpdatedButNotYetEmail () {\n    return AlertDialog.populate({\n      heading: _('success'),\n      body: _('yourAccountHasBeenUpdatedButEmail'),\n      keyboard: true,\n      backdrop: true\n    });\n  },\n\n  /**\n   * @param {PlainObject} cfg\n   * @param {\"accountDeleted\"|\"loggedOut\"} cfg.type\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  onShowLockedAlert ({type}) {\n    return lockedAlert({type, heading: 'success'});\n  },\n\n  /**\n   * @param {PlainObject} cfg\n   * @param {string} [cfg.message]\n   * @param {\"ErrorLoggingOut\"|\"FailureSubmittingUserInfo\"|\n   * \"SessionLost\"|\"ProblemDispatchingLink\"} [cfg.type]\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  onShowLockedErrorAlert ({type, message}) {\n    return lockedAlert({type, message, heading: 'error'});\n  }\n};\n\nexport default HomeView;\n","/* globals $ */\n\nconst populateForm = (sel, {\n  heading,\n  subheading,\n  action1,\n  action2\n}) => {\n  // customize the account settings form\n  $(sel + ' h1.dialog').text(heading);\n  $(sel + ' h2.dialog').text(subheading);\n  $(sel + ' [data-name=action1]').text(action1);\n  $(sel + ' [data-name=action2]').text(action2);\n  return $(sel);\n};\n\nexport default populateForm;\n","/* globals $, Nogin */\n\nconst {_} = Nogin;\n\n/**\n* @typedef {PlainObject} AccountInfoElements\n* @property {external:jQuery} name\n* @property {external:jQuery} email\n* @property {external:jQuery} user\n* @property {external:jQuery} pass\n*/\n\nconst AccountValidatorView = {\n  /**\n   * @returns {HTMLFormElement}\n   */\n  getForm () {\n    return $('[data-name=account-form]')[0];\n  },\n\n  /**\n   * @returns {external:jQuery}\n   */\n  getUserId () {\n    return $('#userId');\n  },\n\n  /**\n   * @returns {AccountInfoElements}\n   */\n  getFormFields () {\n    return {\n      name: $('[data-name=\"name\"]')[0],\n      email: $('[data-name=\"email\"]')[0],\n      user: $('[data-name=\"user\"]')[0],\n      pass: $('[data-name=\"pass\"]')[0],\n      passConfirm: $('[data-name=\"pass-confirm\"]') &&\n        $('[data-name=\"pass-confirm\"]')[0]\n    };\n  },\n\n  /**\n   * @type {PlainObject<string,PlainObject<string,string>>}\n   */\n  errorMessages: {\n    name: {\n      PleaseEnterName: _('PleaseEnterName')\n    },\n    email: {\n      emailAddressAlreadyInUse: _('emailAddressAlreadyInUse'),\n      PleaseEnterValidEmail: _('PleaseEnterValidEmail')\n    },\n    user: {\n      userNameAlreadyInUse: _('userNameAlreadyInUse'),\n      PleaseChooseUserName: _('PleaseChooseUserName')\n    },\n    pass: {\n      PasswordMinimumLength: _('PasswordMinimumLength'),\n      PasswordsDontMatch: _('PasswordsDontMatch')\n    }\n  }\n};\n\nexport default AccountValidatorView;\n","import AccountValidatorView from '../views/validators/AccountValidatorView.js';\n\n/**\n * Ensures accounts are valid.\n */\nclass AccountValidator {\n  /**\n   * Sets up properties and methods.\n   * @param {PlainObject} cfg\n   * @param {boolean} cfg.signup\n   */\n  constructor ({signup} = {}) {\n    // build array maps of the form inputs & control groups\n    this.signup = signup;\n\n    this.form = AccountValidatorView.getForm();\n    this.formFields = AccountValidatorView.getFormFields();\n    this.userId = AccountValidatorView.getUserId();\n    this.errorMessages = AccountValidatorView.errorMessages;\n\n    this.userIsLoggedIn = (s) => {\n      // if user is logged in and hasn't changed their password, return ok\n      return this.userId.val() && s === '';\n    };\n  }\n\n  /**\n   * @returns {void}\n   */\n  showInvalidEmail () {\n    this.formFields.email.setCustomValidity(\n      this.errorMessages.email.emailAddressAlreadyInUse\n    );\n    this.form.reportValidity();\n  }\n\n  /**\n   * @returns {void}\n   */\n  showInvalidUserName () {\n    this.formFields.user.setCustomValidity(\n      this.errorMessages.user.userNameAlreadyInUse\n    );\n    this.form.reportValidity();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  validateForm () {\n    const {name, email, user, pass, passConfirm} = this.formFields;\n    Object.values(this.formFields).forEach((field) => {\n      if (field) {\n        field.setCustomValidity('');\n      }\n    });\n    // todo[cypress@>=13.0.0]: validity: remove this disabling of istanbul\n    //  to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (name.validity.tooShort) {\n      name.setCustomValidity(this.errorMessages.name.PleaseEnterName);\n    }\n    // todo[cypress@>=13.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (email.validity.patternMismatch) {\n      email.setCustomValidity(this.errorMessages.email.PleaseEnterValidEmail);\n    }\n    // todo[cypress@>=13.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (user.validity.tooShort) {\n      user.setCustomValidity(this.errorMessages.user.PleaseChooseUserName);\n    }\n    // todo[cypress@>=13.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (!this.userIsLoggedIn() && pass.validity.tooShort) {\n      pass.setCustomValidity(this.errorMessages.pass.PasswordMinimumLength);\n    }\n    if (this.signup && pass.value !== passConfirm.value) {\n      pass.setCustomValidity(this.errorMessages.pass.PasswordsDontMatch);\n    }\n    return this.form.reportValidity();\n  }\n}\n\nexport default AccountValidator;\n","/* globals $, Nogin */\n\nimport '../polyfills/Error.js';\nimport '../polyfills/console.js';\n\nimport ajaxFormClientSideValidate from\n  '../utilities/ajaxFormClientSideValidate.js';\n\nimport ConfirmDialog from '../views/utilities/ConfirmDialog.js';\nimport HomeView from '../views/home.js';\nimport AccountValidator from '../form-validators/AccountValidator.js';\n\nconst xsrfCookie = $('meta[name=\"csrf-token\"]').attr('content');\n\n// User name field\nconst name = HomeView.getName();\nname.focus();\n\n// Disable user field\nconst user = HomeView.getUser();\nuser.attr('disabled', 'disabled');\n\n// handle account deletion\nconst deleteAccountConfirmDialog = HomeView.setDeleteAccount();\nConfirmDialog.getAccountSubmit(deleteAccountConfirmDialog).click(async () => {\n  try {\n    await deleteAccount();\n  } catch (err) {\n    // Log just in case not internationalized\n    console.error(Nogin._('ErrorFormat', {\n      text: err.text,\n      statusText:\n        // istanbul ignore next\n        err.statusText ||\n        ''\n    }));\n    // However, should already be internationalized by server\n    showLockedErrorAlert({message: err.text});\n  }\n});\n\nconst logoutButton = HomeView.getLogoutButton();\n// handle user logout\nlogoutButton.click(async () => {\n  try {\n    await attemptLogout();\n  } catch (err) {\n    // Log in case actual error not internationalized\n    console.error(Nogin._('ErrorFormat', {\n      text: err.text,\n      statusText:\n        // istanbul ignore next\n        err.statusText ||\n        ''\n    }));\n    showLockedErrorAlert({type: 'ErrorLoggingOut'});\n  }\n});\n\n// confirm account deletion\nconst accountForm = HomeView.setAccountSettings();\nHomeView.getDeleteAccountAction(accountForm).click(() => {\n  deleteAccountConfirmDialog.modal('show');\n});\nsetupValidationSubmission();\n\n/**\n * @returns {boolean}\n */\nfunction emailHasChanged () {\n  const email = HomeView.getEmail();\n  return email[0].value !== email[0].defaultValue;\n}\n\n/**\n * @returns {void}\n */\nfunction setupValidationSubmission () {\n  let confirmed = false;\n  const av = new AccountValidator();\n  accountForm[0].addEventListener('submit', (e) => {\n    const submissionOkToContinue = confirmed ||\n      !emailHasChanged();\n    if (submissionOkToContinue) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const emailChangeConfirmDialog = HomeView.onShowConfirmation({\n      type: 'AppearsChangingEmail'\n    });\n    emailChangeConfirmDialog.modal('show');\n    ConfirmDialog.getAccountSubmit(emailChangeConfirmDialog).click(() => {\n      confirmed = true;\n      accountForm.submit();\n      emailChangeConfirmDialog.modal('hide');\n    });\n  }, true);\n  ajaxFormClientSideValidate(accountForm, {\n    validate () {\n      av.validateForm();\n    },\n    beforeSubmit (formData, jqForm, options) {\n      // Push the disabled username field onto the form data array\n      formData.push({\n        name: 'user', value: user.val()\n      });\n      return true;\n    },\n    success (responseText, status, xhr, $form) {\n      // \"nocontent\" (204), \"notmodified\" (304), \"parseerror\" (JSON or XML)\n      // istanbul ignore else\n      if (status === 'success') {\n        onUpdateSuccess();\n      }\n      confirmed = false; // Allow resubmission\n    },\n    error (e) {\n      confirmed = false; // Allow resubmission\n      switch (e.responseText) {\n      case 'email-taken':\n        av.showInvalidEmail();\n        break;\n      case 'session-lost': {\n        showLockedErrorAlert({type: 'SessionLost'});\n        break;\n      } case 'problem-dispatching-link': {\n        showLockedErrorAlert({type: 'ProblemDispatchingLink'});\n        break;\n      } default:\n        HomeView.onShowLockedErrorAlert({type: 'FailureSubmittingUserInfo'});\n        break;\n      }\n    }\n  });\n}\n\n/**\n * @returns {void}\n */\nfunction onUpdateSuccess () {\n  const accountUpdatedAlertDialog = emailHasChanged()\n    ? HomeView.onAccountUpdatedButNotYetEmail()\n    : HomeView.onAccountUpdated();\n  accountUpdatedAlertDialog.modal('show');\n}\n\n/**\n * @param {string} url\n * @returns {Promise<void>}\n */\nfunction post (url) {\n  // eslint-disable-next-line promise/avoid-new\n  return new Promise((resolve, reject) => {\n    $.ajax(url, {\n      type: 'post',\n      headers: {\n        'X-XSRF-Token': xsrfCookie\n      }\n    }).done(resolve).fail(\n      (jqXHR /* , textStatus, errorThrown */) => {\n        const err = new Error('Ajax POST error');\n        err.text = jqXHR.responseText;\n        err.responseText = jqXHR.statusText;\n        reject(err);\n      }\n    );\n  });\n  // Reenable after these related issues are fixed:\n  // https://github.com/cypress-io/cypress/issues/95\n  // https://github.com/cypress-io/cypress/issues/687\n  /*\n  const resp = await fetch(url, {\n    method: 'POST'\n  });\n  await checkErrors(resp);\n  */\n  /**\n   * @param {Response} resp\n   * @throws {Error}\n   * @returns {Promise<void>}\n   */\n  /*\n  async function checkErrors (resp) {\n    if (!resp.ok) {\n      const err = new Error();\n      err.text = await resp.text();\n      err.responseText = resp.statusText;\n      throw err;\n    }\n  }\n  */\n}\n\n/**\n * @throws {Error}\n * @returns {Promise<void>}\n */\nasync function deleteAccount () {\n  deleteAccountConfirmDialog.modal('hide');\n  await post(Nogin.Routes.delete);\n  showLockedAlert({type: 'accountDeleted'});\n}\n\n/**\n * @throws {Error}\n * @returns {Promise<void>}\n */\nasync function attemptLogout () {\n  await post(Nogin.Routes.logout);\n  showLockedAlert({type: 'loggedOut'});\n}\n\n/**\n * @param {PlainObject} cfg\n * @param {\"accountDeleted\"|\"loggedOut\"} cfg.type\n * @returns {void}\n */\nfunction showLockedAlert ({type}) {\n  const lockedAlertDialog = HomeView.onShowLockedAlert({type});\n  lockedAlertDialog.modal('show');\n  const redirectToRoot = () => {\n    Nogin.redirect('root');\n  };\n  HomeView.getLockedAlertButton(lockedAlertDialog).click(redirectToRoot);\n  setTimeout(redirectToRoot, 3000);\n}\n\n/**\n * @param {PlainObject} cfg\n * @param {\"ErrorLoggingOut\"} cfg.type\n * @param {string} cfg.message\n * @returns {void}\n*/\nfunction showLockedErrorAlert ({type, message}) {\n  const lockedAlertDialog = HomeView.onShowLockedErrorAlert({type, message});\n  lockedAlertDialog.modal('show');\n  const redirectToRoot = () => {\n    Nogin.redirect('root');\n  };\n  HomeView.getLockedAlertButton(lockedAlertDialog).click(redirectToRoot);\n  setTimeout(redirectToRoot, 3000);\n}\n"],"names":["Error","window","_createClass","_classCallCheck","consoleShim","console","noop","forEach","prop","xsrfCookie","$","attr","ConfirmDialog","_ref","type","header","body","cancel","submit","baseSel","concat","modal","show","keyboard","backdrop","text","empty","append","click","confirmDialog","find","AlertDialog","heading","e","preventDefault","_","Nogin","lockedAlert","message","lb","HomeView","accountForm","lockedAlertDialog","_ref2","deleteAccountConfirmDialog","addClass","sel","subheading","action1","action2","removeClass","_ref3","_ref4","AccountValidatorView","getForm","getUserId","getFormFields","name","email","user","pass","passConfirm","errorMessages","PleaseEnterName","emailAddressAlreadyInUse","PleaseEnterValidEmail","userNameAlreadyInUse","PleaseChooseUserName","PasswordMinimumLength","PasswordsDontMatch","AccountValidator","_this","this","arguments","length","undefined","signup","form","formFields","userId","userIsLoggedIn","s","val","key","value","setCustomValidity","reportValidity","_this$formFields","Object","values","field","validity","tooShort","patternMismatch","_empty","attemptLogout","_async","_await","post","Routes","logout","showLockedAlert","deleteAccount","_callIgnored","direct","then","result","Promise","resolve","reject","_call","_catch","recover","_continueIgnored","f","args","i","apply","focus","err","error","statusText","showLockedErrorAlert","confirmed","av","validate","url","beforeSubmit","success","_ref$checkXSRF","checkXSRF","emailHasChanged","defaultValue","ajax","headers","done","fail","jqXHR","responseText","redirectToRoot","redirect","setTimeout","addEventListener","stopPropagation","emailChangeConfirmDialog","validateForm","formData","jqForm","options","push","status","xhr","$form","showInvalidEmail","target","checkValidity","disableXSRF","ajaxForm"],"mappings":"ktBAEqB,oBAAVA,QAITC,OAAOD,MAAKE,YAAAF,IAAAG,OAAAH,OCLd,IAAMI,EAAiC,oBAAZC,QACvB,CAAA,EACAA,QAEEC,EAAO,WACX,EAGF,CAAC,QAAS,OAAOC,SAAQ,SAACC,GACnBJ,EAAYI,KACfJ,EAAYI,GAAQF,EAExB,ICPA,IAAMG,EAAaC,EAAE,2BAA2BC,KAAK,WCJ/CC,EACI,SAAAC,GAML,IALDC,EAAID,EAAJC,KACAC,EAAMF,EAANE,OACAC,EAAIH,EAAJG,KACAC,EAAMJ,EAANI,OACAC,EAAML,EAANK,OAEMC,EAAO,uBAAAC,OAA0BN,EAAiC,+BAcxE,OAbAJ,EAAES,GAASE,MAAM,CACfC,MAAM,EAAOC,UAAU,EAAMC,UAAU,IAEzCd,EAAC,GAAAU,OAAID,6CAAiDM,KACpDV,GAEFL,EAACU,GAAAA,OAAID,EAAmC,8BAACO,QAAQC,OAC/CX,GAEFN,EAACU,GAAAA,OAAID,EAAkB,aAACM,KAAKR,GAAQW,OAAM,WACzClB,EAAES,GAASE,MAAM,OACnB,IACAX,EAAC,GAAAU,OAAID,eAAmBM,KAAKP,GACtBR,EAAES,EACV,EAvBGP,EA6BY,SAAEiB,GAChB,OAAOA,EAAcC,KAAK,UAC5B,EC/BIC,EASI,SAAAlB,GAKL,IAJDmB,EAAOnB,EAAPmB,QACAhB,EAAIH,EAAJG,KACAO,EAAQV,EAARU,SACAC,EAAQX,EAARW,SAEMH,EAAQX,EAAE,2BAA2BW,MAAM,CAC/CC,MAAM,EAAOC,SAAAA,EAAUC,SAAAA,IAUzB,OARAd,EAAE,iEAAiEe,KACjEO,GAEFtB,EAAE,oDAAoDgB,QAAQC,OAAOX,GACrEN,EAAE,kCAAkCkB,OAAM,SAACK,GACzCA,EAAEC,iBACFb,EAAMA,MAAM,OACd,IACOA,CACT,ECvBKc,EAAKC,MAALD,EASP,SAASE,EAAWxB,GAA4B,IAAzBC,EAAID,EAAJC,KAAMwB,EAAOzB,EAAPyB,QAASN,EAAOnB,EAAPmB,QACpC,OAAOD,EAAqB,CAC1BC,QAASG,EAAEH,GACXhB,KAAMsB,GAAWH,EAAErB,EAAM,CACvByB,GAAI7B,EAAE,SAAS,KAEjBa,UAAU,EACVC,SAAU,UAEd,CAEA,IAAMgB,EAIW,WACb,OAAO9B,EAAE,yBACV,EANG8B,EAUG,WACL,OAAO9B,EAAE,qBACV,EAZG8B,EAiBI,WACN,OAAO9B,EAAE,sBACV,EAnBG8B,EAyBkB,SAAEC,GACtB,OAAOA,EAAYX,KAAK,sBACzB,EA3BGU,EAiCgB,SAAEE,GACpB,OAAOA,EAAkBZ,KAAK,SAC/B,EAnCGU,EAgDG,WACL,OAAO9B,EAAE,qBACV,EAlDG8B,EAyDc,SAAAG,GAAU,IAAP7B,EAAI6B,EAAJ7B,KACnB,OAAOF,EAAuB,CAC5BE,KAAM,SACNC,OAAQoB,EAAE,UACVnB,KAAMmB,EAAErB,EAAM,CACZyB,GAAI7B,EAAE,SAAS,KAEjBO,OAAQkB,EAAE,UACVjB,OAAQiB,EAAE,YAEb,EAnEGK,EAwEY,WAGd,IAAMI,EAA6BhC,EAAuB,CACxDE,KAAM,gBACNC,OAAQoB,EAAE,iBACVnB,KAAMmB,EAAE,yBACRlB,OAAQkB,EAAE,UACVjB,OAAQiB,EAAE,YAGZ,OADAS,EAA2Bd,KAAK,WAAWe,SAAS,cAC7CD,CACR,EApFGJ,EAwFc,WAChB,ICjHkBM,EAAGjC,EACvBmB,EACAe,EACAC,EACAC,ED6GQR,GCjHYK,EDiHe,2BCjHZjC,EDiHwC,CAC3DmB,QAASG,EAAE,mBACXY,WAAYZ,EAAE,0BACda,QAASb,EAAE,cACXc,QAASd,EAAE,eCpHfH,EAAOnB,EAAPmB,QACAe,EAAUlC,EAAVkC,WACAC,EAAOnC,EAAPmC,QACAC,EAAOpC,EAAPoC,QAGAvC,EAAEoC,EAAM,cAAcrB,KAAKO,GAC3BtB,EAAEoC,EAAM,cAAcrB,KAAKsB,GAC3BrC,EAAEoC,EAAM,wBAAwBrB,KAAKuB,GACrCtC,EAAEoC,EAAM,wBAAwBrB,KAAKwB,GAC9BvC,EAAEoC,ID+GP,OAHAL,EAAYX,KAAK,uBACdoB,YAAY,oBACZL,SAAS,cACLJ,CACR,EAnGGD,EAuGY,WACd,OAAOT,EAAqB,CAC1BC,QAASG,EAAE,WACXnB,KAAMmB,EAAE,6BACRZ,UAAU,EACVC,UAAU,GAEb,EA9GGgB,EAmH0B,WAC5B,OAAOT,EAAqB,CAC1BC,QAASG,EAAE,WACXnB,KAAMmB,EAAE,qCACRZ,UAAU,EACVC,UAAU,GAEb,EA1HGgB,EAiIa,SAAAW,GACf,OAAOd,EAAY,CAACvB,KADEqC,EAAJrC,KACQkB,QAAS,WACpC,EAnIGQ,EA4IkB,SAAAY,GACpB,OAAOf,EAAY,CAACvB,KADOsC,EAAJtC,KACGwB,QADUc,EAAPd,QACMN,QAAS,SAC9C,EEtKKG,EAAKC,MAALD,EAUDkB,EAAuB,CAI3BC,QAAO,WACL,OAAO5C,EAAE,4BAA4B,EACtC,EAKD6C,UAAS,WACP,OAAO7C,EAAE,UACV,EAKD8C,cAAa,WACX,MAAO,CACLC,KAAM/C,EAAE,sBAAsB,GAC9BgD,MAAOhD,EAAE,uBAAuB,GAChCiD,KAAMjD,EAAE,sBAAsB,GAC9BkD,KAAMlD,EAAE,sBAAsB,GAC9BmD,YAAanD,EAAE,+BACbA,EAAE,8BAA8B,GAErC,EAKDoD,cAAe,CACbL,KAAM,CACJM,gBAAiB5B,EAAE,oBAErBuB,MAAO,CACLM,yBAA0B7B,EAAE,4BAC5B8B,sBAAuB9B,EAAE,0BAE3BwB,KAAM,CACJO,qBAAsB/B,EAAE,wBACxBgC,qBAAsBhC,EAAE,yBAE1ByB,KAAM,CACJQ,sBAAuBjC,EAAE,yBACzBkC,mBAAoBlC,EAAE,yBCrDtBmC,EAAgB,WAMpB,SAAAA,IAA4B,IAAAC,EAAAC,KAAA3D,EAAA4D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,CAAE,EAAZG,EAAM/D,EAAN+D,OAAMzE,OAAAmE,GAElBE,KAAKI,OAASA,EAEdJ,KAAKK,KAAOxB,EAAqBC,UACjCkB,KAAKM,WAAazB,EAAqBG,gBACvCgB,KAAKO,OAAS1B,EAAqBE,YACnCiB,KAAKV,cAAgBT,EAAqBS,cAE1CU,KAAKQ,eAAiB,SAACC,GAErB,OAAOV,EAAKQ,OAAOG,OAAe,KAAND,EAEhC,CAgEC,OA9DD/E,EAAAoE,EAAA,CAAA,CAAAa,IAAA,mBAAAC,MAGA,WACEZ,KAAKM,WAAWpB,MAAM2B,kBACpBb,KAAKV,cAAcJ,MAAMM,0BAE3BQ,KAAKK,KAAKS,gBACZ,GAEA,CAAAH,IAAA,sBAAAC,MAGA,WACEZ,KAAKM,WAAWnB,KAAK0B,kBACnBb,KAAKV,cAAcH,KAAKO,sBAE1BM,KAAKK,KAAKS,gBACZ,GAEA,CAAAH,IAAA,eAAAC,MAGA,WACE,IAAAG,EAA+Cf,KAAKM,WAA7CrB,EAAI8B,EAAJ9B,KAAMC,EAAK6B,EAAL7B,MAAOC,EAAI4B,EAAJ5B,KAAMC,EAAI2B,EAAJ3B,KAAMC,EAAW0B,EAAX1B,YAqChC,OApCA2B,OAAOC,OAAOjB,KAAKM,YAAYvE,SAAQ,SAACmF,GAClCA,GACFA,EAAML,kBAAkB,GAE5B,IAKI5B,EAAKkC,SAASC,UAChBnC,EAAK4B,kBAAkBb,KAAKV,cAAcL,KAAKM,iBAM7CL,EAAMiC,SAASE,iBACjBnC,EAAM2B,kBAAkBb,KAAKV,cAAcJ,MAAMO,uBAM/CN,EAAKgC,SAASC,UAChBjC,EAAK0B,kBAAkBb,KAAKV,cAAcH,KAAKQ,uBAM5CK,KAAKQ,kBAAoBpB,EAAK+B,SAASC,UAC1ChC,EAAKyB,kBAAkBb,KAAKV,cAAcF,KAAKQ,uBAE7CI,KAAKI,QAAUhB,EAAKwB,QAAUvB,EAAYuB,OAC5CxB,EAAKyB,kBAAkBb,KAAKV,cAAcF,KAAKS,oBAE1CG,KAAKK,KAAKS,gBACnB,KAAChB,CAAA,CAnFmB,GC2lBf,SAASwB,IAChB,CArZA,IAIeC,EAAaC,GAAI,WAAA,OAAAC,EACxBC,EAAK9D,MAAM+D,OAAOC,SAAO,WAC/BC,EAAgB,CAACvF,KAAM,aAAc,GACvC,IAjBA,IAIewF,EAAaN,GAAI,WACW,OAAzCpD,EAA2BvB,MAAM,QAAQ4E,EACnCC,EAAK9D,MAAM+D,gBAAc,WAC/BE,EAAgB,CAACvF,KAAM,kBAAmB,GAC5C,IAkVO,SAASyF,EAAavF,EAAMwF,GAClC,OAdM,SAAexF,EAAMyF,EAAMD,GACjC,GAAIA,EACH,OAAOC,EAAOA,EAAKzF,KAAUA,IAE9B,IACC,IAAI0F,EAASC,QAAQC,QAAQ5F,KAC7B,OAAOyF,EAAOC,EAAOD,KAAKA,GAAQC,CAGnC,CAFE,MAAOzE,GACR,OAAO0E,QAAQE,OAAO5E,EACvB,CACD,CAIQ6E,CAAM9F,EAAM8E,EAAQU,EAC5B,CAlhBA,IAAM/F,EAAaC,EAAE,2BAA2BC,KAAK,WAsiB9C,SAASoG,EAAO/F,EAAMgG,GAC5B,IACC,IAAIN,EAAS1F,GAGd,CAFE,MAAMiB,GACP,OAAO+E,EAAQ/E,EAChB,CACA,OAAIyE,GAAUA,EAAOD,KACbC,EAAOD,UAAK,EAAQO,GAErBN,CACR,CAjdO,SAAAO,EAA0B7B,GAChC,GAAIA,GAASA,EAAMqB,KAClB,OAAOrB,EAAMqB,KAAIX,EAEnB,CAzCO,SAAAE,EAAgBkB,GACtB,OAAO,WACN,IAAK,IAAIC,EAAO,GAAIC,EAAI,EAAGA,EAAI3C,UAAUC,OAAQ0C,IAChDD,EAAKC,GAAK3C,UAAU2C,GAErB,IACC,OAAOT,QAAQC,QAAQM,EAAEG,MAAM7C,KAAM2C,GAGtC,CAFE,MAAMlF,GACP,OAAO0E,QAAQE,OAAO5E,EACvB,EAEF,CAGO,SAAAgE,EAAgBb,EAAOqB,EAAMD,GACnC,OAAIA,EACIC,EAAOA,EAAKrB,GAASA,GAExBA,GAAUA,EAAMqB,OACpBrB,EAAQuB,QAAQC,QAAQxB,IAElBqB,EAAOrB,EAAMqB,KAAKA,GAAQrB,EAClC,CA7Ea5C,IACR8E,QAGL,IAAM3D,EAAOnB,IACbmB,EAAKhD,KAAK,WAAY,YAGtB,IAAMiC,EAA6BJ,IACnC5B,EAA+BgC,GAA4BhB,MAAKoE,GAAa,WAAA,OAAAiB,EAAAF,GACvE,WAAA,OAAAR,EACID,EACP,IAAA,SAAQiB,GAEPlH,QAAQmH,MAAMpF,MAAMD,EAAE,cAAe,CACnCV,KAAM8F,EAAI9F,KACVgG,WAEEF,EAAIE,YACJ,MAGJC,GAAqB,CAACpF,QAASiF,EAAI9F,MACpC,IACH,KAEqBe,IAERZ,MAAKoE,GAAa,WAAA,OAAAiB,EAAAF,GACzB,WAAA,OAAAR,EACIR,EACP,IAAA,SAAQwB,GAEPlH,QAAQmH,MAAMpF,MAAMD,EAAE,cAAe,CACnCV,KAAM8F,EAAI9F,KACVgG,WAEEF,EAAIE,YACJ,MAEJC,GAAqB,CAAC5G,KAAM,mBAC7B,IACH,KAGA,IAkBM6G,EACEC,EPvE4B/C,EAAIhE,EACtCgH,EAEAC,EACAC,EACAC,EACAR,EAAKS,EACLC,EO6CIzF,EAAcD,IASpB,SAAS2F,IACP,IAAMzE,EAAQlB,IACd,OAAOkB,EAAM,GAAG0B,QAAU1B,EAAM,GAAG0E,YACrC,CA+EA,SAASlC,EAAM4B,GAEb,OAAO,IAAInB,SAAQ,SAACC,EAASC,GAC3BnG,EAAE2H,KAAKP,EAAK,CACVhH,KAAM,OACNwH,QAAS,CACP,eAAgB7H,KAEjB8H,KAAK3B,GAAS4B,MACf,SAACC,GACC,IAAMlB,EAAM,IAAIvH,MAAM,mBACtBuH,EAAI9F,KAAOgH,EAAMC,aACjBnB,EAAImB,aAAeD,EAAMhB,WACzBZ,EAAOU,EACT,GAEJ,GAyBF,CA0BA,SAASlB,EAAexF,GAAU,IAAPC,EAAID,EAAJC,KACnB4B,EAAoBF,EAA2B,CAAC1B,KAAAA,IACtD4B,EAAkBrB,MAAM,QACxB,IAAMsH,EAAiB,WACrBvG,MAAMwG,SAAS,SAEjBpG,EAA8BE,GAAmBd,MAAM+G,GACvDE,WAAWF,EAAgB,IAC7B,CAQA,SAASjB,GAAoB/E,GAAmB,IAAhB7B,EAAI6B,EAAJ7B,KAAMwB,EAAOK,EAAPL,QAC9BI,EAAoBF,EAAgC,CAAC1B,KAAAA,EAAMwB,QAAAA,IACjEI,EAAkBrB,MAAM,QACxB,IAAMsH,EAAiB,WACrBvG,MAAMwG,SAAS,SAEjBpG,EAA8BE,GAAmBd,MAAM+G,GACvDE,WAAWF,EAAgB,IAC7B,CArLAnG,EAAgCC,GAAab,OAAM,WACjDgB,EAA2BvB,MAAM,OACnC,IAeMsG,GAAY,EACVC,EAAK,IAAItD,EACf7B,EAAY,GAAGqG,iBAAiB,UAAU,SAAC7G,GAGzC,IAF+B0F,GAC5BQ,IACH,CAGAlG,EAAEC,iBACFD,EAAE8G,kBACF,IAAMC,EAA2BxG,EAA4B,CAC3D1B,KAAM,yBAERkI,EAAyB3H,MAAM,QAC/BT,EAA+BoI,GAA0BpH,OAAM,WAC7D+F,GAAY,EACZlF,EAAYvB,SACZ8H,EAAyB3H,MAAM,OACjC,GAXA,CAYD,IAAE,GPzF+BwD,EO0FPpC,EPzF3BoF,GADsChH,EO0FE,CACtCgH,SAAQ,WACND,EAAGqB,cACJ,EACDlB,sBAAcmB,EAAUC,EAAQC,GAK9B,OAHAF,EAASG,KAAK,CACZ5F,KAAM,OAAQ2B,MAAOzB,EAAKuB,SAErB,CACR,EACD8C,QAAO,SAAEU,EAAcY,EAAQC,EAAKC,GAGnB,YAAXF,IA6B0BnB,IAC9B3F,IACAA,KACsBnB,MAAM,QA7B5BsG,GAAY,CACb,EACDH,MAAK,SAAEvF,GAEL,OADA0F,GAAY,EACJ1F,EAAEyG,cACV,IAAK,cACHd,EAAG6B,mBACH,MACF,IAAK,eACH/B,GAAqB,CAAC5G,KAAM,gBAC5B,MACA,IAAK,2BACL4G,GAAqB,CAAC5G,KAAM,2BAC5B,MACA,QACA0B,EAAgC,CAAC1B,KAAM,8BAG3C,IP5HF+G,SAEAC,EAAGjH,EAAHiH,IACAC,EAAYlH,EAAZkH,aACAC,EAAOnH,EAAPmH,QACAR,EAAK3G,EAAL2G,MAAKS,EAAApH,EACLqH,UAAAA,OAAY,IAAHD,GAAOA,EAShBpD,EAAK,GAAGiE,iBAAiB,UAAU,SAAC7G,GAElC4F,EAAS5F,EACV,IAAE,GAEH4C,EAAK,GAAGiE,iBAAiB,SAAS,SAAAnG,GAAqB,IAAX+C,EAAK/C,EAAb+G,OAClChE,EAAML,kBAAkB,IACxBK,EAAMiE,cAAc,GACrB,IAAE,IAGCzB,GAAczH,GAAe2B,MAAMwH,YAKvC/E,EAAKgF,SAAS,CACZvB,QAAS,CAIP,eAAgB7H,GAElBqH,IAAAA,EACAC,aAAAA,EACAC,QAAAA,EACAR,MAAAA,IAdAA,EAAM,CAACkB,aAAc"}