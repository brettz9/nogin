{"version":3,"file":"signupController.iife.min.js","sources":["../utilities/ajaxFormClientSideValidate.js","../views/validators/AccountValidatorView.js","../form-validators/AccountValidator.js","../views/utilities/AlertDialog.js","../views/utilities/ConfirmDialog.js","../views/signup.js","../views/utilities/populateForm.js","signupController.js"],"sourcesContent":["/* globals $, Nogin -- `$` is jQuery not ESM, `Nogin` is server-set */\n\n// Note: This per-request approach suffers from the possibility that the\n//   may subsequently open a page from the site with nogin in another tab\n//   where that page sets a new, different token meta expectation to a\n//   new value and this will thereby become invalid.\nconst xsrfCookie = $('meta[name=\"csrf-token\"]').attr('content');\n\n/**\n * @typedef {{\n *   headers?: {[key: string]: string|undefined},\n *   url?: string,\n *   beforeSubmit?: (\n *     arr: {name: string, value: string|boolean}[],\n *     $form: any,\n *     options: any\n *   ) => boolean|void,\n *   success: (\n *     responseText: string, status: string, xhr: any, $form: JQuery\n *   ) => void,\n *   error: (cfg: {\n *     responseText: string\n *   }) => void,\n * }} AjaxFormConfig\n */\n\n/**\n * @typedef {JQuery & {\n *   ajaxForm: (cfg: AjaxFormConfig) => void\n * }} JQueryWithAjaxForm\n */\n\n/**\n * @param {JQueryWithAjaxForm} form\n * @param {AjaxFormConfig & {\n *   validate: (e: Event) => void,\n *   checkXSRF?: boolean\n * }} cfg\n * @returns {void}\n */\nconst ajaxFormClientSideValidate = (form, cfg) => {\n  const {\n    validate,\n    // `ajaxForm` properties and methods\n    url,\n    beforeSubmit,\n    success,\n    error,\n    checkXSRF = true\n  } = cfg;\n  // As per problem #3 at https://web.archive.org/web/20160930102348/http://www.html5rocks.com/en/tutorials/forms/constraintvalidation/#toc-current-implementation-issues ,\n  //  we can't do the validation at submit, so we instead add a capturing\n  //  change listener as well as input listeners to reset the messages;\n  //  note that we can't use the `invalid` event to call `reportValidity`\n  //  after our `setCustomValidity()` (to ensure we get the bubbles showing)\n  //  as that fires further `invalid` events; and setting the form to\n  //  `novalidate` won't show the bubbles.\n  form[0].addEventListener('change', (e) => {\n    // Provide custom messages of invalidity\n    validate(e);\n  }, true);\n\n  form[0].addEventListener('input', ({target}) => {\n    const field = /** @type {HTMLInputElement} */ (target);\n    field.setCustomValidity('');\n    field.checkValidity();\n  }, true);\n\n  // istanbul ignore if\n  if (checkXSRF && !xsrfCookie && !Nogin.disableXSRF) {\n    error({responseText: 'UnknownError'});\n    return;\n  }\n\n  form.ajaxForm({\n    headers: {\n      // `$.ajaxForm` will auto-check for special `meta` tags to add XSRF\n      //   data, but we avoid the extra meta it requires by sending on the\n      //   header.\n      'X-XSRF-Token': xsrfCookie\n    },\n    url,\n    beforeSubmit,\n    success,\n    error\n  });\n};\n\nexport default ajaxFormClientSideValidate;\n","/* globals $, Nogin -- `$` is jQuery not ESM, `Nogin` is server-set */\n\nconst {_} = Nogin;\n\n/**\n * @typedef {object} AccountInfoElements\n * @property {HTMLInputElement} name\n * @property {HTMLInputElement} email\n * @property {HTMLInputElement} user\n * @property {HTMLInputElement} pass\n * @property {HTMLInputElement} passConfirm\n */\n\nconst AccountValidatorView = {\n  /**\n   * @returns {HTMLFormElement}\n   */\n  getForm () {\n    return /** @type {HTMLFormElement} */ ($('[data-name=account-form]')[0]);\n  },\n\n  /**\n   * @returns {JQuery}\n   */\n  getUserId () {\n    return $('#userId');\n  },\n\n  /**\n   * @returns {AccountInfoElements}\n   */\n  getFormFields () {\n    return {\n      name: /** @type {HTMLInputElement} */ ($('[data-name=\"name\"]')[0]),\n      email: /** @type {HTMLInputElement} */ ($('[data-name=\"email\"]')[0]),\n      user: /** @type {HTMLInputElement} */ ($('[data-name=\"user\"]')[0]),\n      pass: /** @type {HTMLInputElement} */ ($('[data-name=\"pass\"]')[0]),\n      passConfirm: $('[data-name=\"pass-confirm\"]') &&\n      /** @type {HTMLInputElement} */ ($('[data-name=\"pass-confirm\"]')[0])\n    };\n  },\n\n  /**\n   * @type {{[key: string]: {[key: string]: string}}}\n   */\n  errorMessages: {\n    name: {\n      PleaseEnterName: /** @type {string} */ (_('PleaseEnterName'))\n    },\n    email: {\n      emailAddressAlreadyInUse: /** @type {string} */ (\n        _('emailAddressAlreadyInUse')\n      ),\n      PleaseEnterValidEmail: /** @type {string} */ (_('PleaseEnterValidEmail'))\n    },\n    user: {\n      userNameAlreadyInUse: /** @type {string} */ (_('userNameAlreadyInUse')),\n      PleaseChooseUserName: /** @type {string} */ (_('PleaseChooseUserName'))\n    },\n    pass: {\n      PasswordMinimumLength: /** @type {string} */ (_('PasswordMinimumLength')),\n      PasswordsDontMatch: /** @type {string} */ (_('PasswordsDontMatch'))\n    }\n  }\n};\n\nexport default AccountValidatorView;\n","import AccountValidatorView from '../views/validators/AccountValidatorView.js';\n\n/**\n * Ensures accounts are valid.\n */\nclass AccountValidator {\n  /**\n   * Sets up properties and methods.\n   * @param {object} [cfg]\n   * @param {boolean} [cfg.signup]\n   */\n  constructor ({signup} = {}) {\n    // build array maps of the form inputs & control groups\n    this.signup = signup;\n\n    this.form = AccountValidatorView.getForm();\n    this.formFields = AccountValidatorView.getFormFields();\n    this.userId = AccountValidatorView.getUserId();\n    this.errorMessages = AccountValidatorView.errorMessages;\n\n    /**\n     * @param {string} s\n     * @returns {boolean}\n     */\n    this.userIsLoggedIn = (s) => {\n      // if user is logged in and hasn't changed their password, return ok\n      return Boolean(this.userId.val()) && s === '';\n    };\n  }\n\n  /**\n   * @returns {void}\n   */\n  showInvalidEmail () {\n    this.formFields.email.setCustomValidity(\n      this.errorMessages.email.emailAddressAlreadyInUse\n    );\n    this.form.reportValidity();\n  }\n\n  /**\n   * @returns {void}\n   */\n  showInvalidUserName () {\n    this.formFields.user.setCustomValidity(\n      this.errorMessages.user.userNameAlreadyInUse\n    );\n    this.form.reportValidity();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  validateForm () {\n    const {name, email, user, pass, passConfirm} = this.formFields;\n    Object.values(this.formFields).forEach((field) => {\n      if (field) {\n        field.setCustomValidity('');\n      }\n    });\n    // todo[cypress@>=14.0.0]: validity: remove this disabling of istanbul\n    //  to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (name.validity.tooShort) {\n      name.setCustomValidity(this.errorMessages.name.PleaseEnterName);\n    }\n    // todo[cypress@>=14.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (email.validity.patternMismatch) {\n      email.setCustomValidity(this.errorMessages.email.PleaseEnterValidEmail);\n    }\n    // todo[cypress@>=14.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (user.validity.tooShort) {\n      user.setCustomValidity(this.errorMessages.user.PleaseChooseUserName);\n    }\n    // todo[cypress@>=14.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (!this.userIsLoggedIn(pass.value) && pass.validity.tooShort) {\n      pass.setCustomValidity(this.errorMessages.pass.PasswordMinimumLength);\n    }\n    if (this.signup && pass.value !== passConfirm.value) {\n      pass.setCustomValidity(this.errorMessages.pass.PasswordsDontMatch);\n    }\n    return this.form.reportValidity();\n  }\n}\n\nexport default AccountValidator;\n","/* globals $ -- `$` is jQuery not ESM */\n\n/**\n * @typedef {JQuery & {\n *   modal: (showOrHide: \"show\"|\"hide\"|{\n *     show: boolean,\n *     keyboard: boolean,\n *     backdrop: boolean|\"static\"\n *   }) => JQueryWithModal\n * }} JQueryWithModal\n */\n\nconst AlertDialog = {\n  /**\n   * @param {object} cfg\n   * @param {string} cfg.heading\n   * @param {Element|string} cfg.body\n   * @param {boolean} cfg.keyboard\n   * @param {boolean|\"static\"} cfg.backdrop\n   * @returns {JQueryWithModal} `HTMLDivElement`\n   */\n  populate ({\n    heading,\n    body,\n    keyboard,\n    backdrop\n  }) {\n    const modal = /** @type {JQueryWithModal} */ (\n      $('[data-name=modal-alert]')).modal({\n      show: false, keyboard, backdrop\n    });\n    $('[data-name=modal-alert] .modal-header [data-name=modal-title]').text(\n      heading\n    );\n    $('[data-name=modal-alert] [data-name=modal-body] p').empty().append(body);\n    $('[data-name=modal-alert] button').on('click', (e) => {\n      e.preventDefault();\n      modal.modal('hide');\n    });\n    return modal;\n  }\n};\n\nexport default AlertDialog;\n","/* globals $ -- `$` is jQuery not ESM */\n\nconst ConfirmDialog = {\n  /**\n   * @param {{\n   *   type: string,\n   *   header: string,\n   *   body: string|Element,\n   *   cancel: string,\n   *   submit: string\n   * }} cfg\n   * @returns {import('./AlertDialog.js').JQueryWithModal}\n   */\n  populate ({\n    type,\n    header,\n    body,\n    cancel,\n    submit\n  }) {\n    const baseSel = `[data-confirm-type=\"${type}\"][data-name=modal-confirm]`;\n    /** @type {import('./AlertDialog.js').JQueryWithModal} */ (\n      $(baseSel)).modal({\n      show: false, keyboard: true, backdrop: true\n    });\n    $(`${baseSel} .modal-header [data-name=modal-title]`).text(\n      header\n    );\n    $(`${baseSel} [data-name=modal-body] p`).empty().append(\n      body\n    );\n    $(`${baseSel} .cancel`).text(cancel).on('click', () => {\n      /** @type {import('./AlertDialog.js').JQueryWithModal} */ (\n        $(baseSel)\n      ).modal('hide');\n    });\n    $(`${baseSel} .submit`).text(submit);\n    return /** @type {import('./AlertDialog.js').JQueryWithModal} */ (\n      $(baseSel)\n    );\n  },\n\n  /**\n   * @param {JQuery} confirmDialog\n   * @returns {JQuery}\n   */\n  getSubmit (confirmDialog) {\n    return confirmDialog.find('.submit');\n  }\n};\n\nexport default ConfirmDialog;\n","/* globals $, Nogin -- `$` is jQuery not ESM, `Nogin` is server-set */\nimport AlertDialog from './utilities/AlertDialog.js';\nimport ConfirmDialog from './utilities/ConfirmDialog.js';\nimport populateForm from './utilities/populateForm.js';\n\nconst {_} = Nogin;\n\nconst SignupView = {\n  /**\n   * @returns {JQuery}\n   */\n  getName () {\n    return $('#name-tf');\n  },\n\n  /**\n   * @returns {JQuery}\n   */\n  getAccountForm () {\n    return $('#account-form');\n  },\n\n  /**\n   * @returns {import('./utilities/AlertDialog.js').\n   *   JQueryWithModal} `HTMLDivElement`\n   */\n  setConfirmSignup () {\n    return ConfirmDialog.populate({\n      type: 'signupAgreement',\n      header: /** @type {string} */ (_('SignupAgreement')),\n      body: /** @type {Element} */ (\n        // Safe for XSS because obtained from config file only\n        $(`<div>${Nogin.signupAgreement}</div>`)[0]\n      ),\n      cancel: /** @type {string} */ (_('cancel')),\n      submit: /** @type {string} */ (_('agree'))\n    });\n  },\n\n  /**\n   * @param {JQuery} accountCreatedAlertDialog `HTMLDivElement`\n   * @returns {JQuery} `HTMLFormElement`\n   */\n  getAccountCreatedOkButton (accountCreatedAlertDialog) {\n    return accountCreatedAlertDialog.find('[data-name=ok]');\n  },\n\n  /**\n   * @param {JQuery} accountForm `HTMLFormElement`\n   * @returns {JQuery}\n   */\n  getActionForAccountForm (accountForm) {\n    return accountForm.find('[data-name=action1]');\n  },\n\n  /**\n   * @returns {import('../utilities/ajaxFormClientSideValidate.js').\n   *   JQueryWithAjaxForm} `HTMLFormElement`\n   */\n  setAccountSettings () {\n    // Customize the account signup form\n    const accountForm = populateForm('[data-name=account-form]', {\n      heading: /** @type {string} */ (_('Signup')),\n      subheading: /** @type {string} */ (_('PleaseTellUsAboutYourself')),\n      action1: /** @type {string} */ (_('Cancel')),\n      action2: /** @type {string} */ (_('Submit'))\n    });\n    return accountForm;\n  },\n\n  /**\n   * @returns {import('./utilities/AlertDialog.js').\n   *   JQueryWithModal} `HTMLDivElement`\n   */\n  accountCreated () {\n    // Setup the alert that displays when an account is successfully created\n    return AlertDialog.populate({\n      heading: /** @type {string} */ (_('AccountCreatedSignup')),\n      body: /** @type {Element} */ (_('PleaseCheckEmailForVerificationLink', {\n        lb: $('<br/>')[0]\n      })),\n      keyboard: false,\n      backdrop: 'static'\n    });\n  },\n\n  /**\n   * @param {object} cfg\n   * @param {\"DispatchActivationLinkError\"} cfg.type\n   * @returns {import('./utilities/AlertDialog.js').\n   *   JQueryWithModal} `HTMLDivElement`\n   */\n  onShowLockedErrorAlert ({type}) {\n    return AlertDialog.populate({\n      heading: /** @type {string} */ (_('error')),\n      body: /** @type {Element} */ (_(type, {\n        lb: $('<br/>')[0]\n      })),\n      keyboard: false,\n      backdrop: 'static'\n    });\n  }\n};\n\nexport default SignupView;\n","/* globals $ -- `$` is jQuery not ESM */\n\n/**\n * @param {string} sel\n * @param {{\n *   heading: string,\n *   subheading: string,\n *   action1: string,\n *   action2: string\n * }} cfg\n * @returns {import('../../utilities/ajaxFormClientSideValidate.js').\n   *   JQueryWithAjaxForm}\n */\nconst populateForm = (sel, {\n  heading,\n  subheading,\n  action1,\n  action2\n}) => {\n  // customize the account settings form\n  $(sel + ' h1.dialog').text(heading);\n  $(sel + ' h2.dialog').text(subheading);\n  $(sel + ' [data-name=action1]').text(action1);\n  $(sel + ' [data-name=action2]').text(action2);\n  return (\n    /**\n     * @type {import('../../utilities/ajaxFormClientSideValidate.js').\n     *   JQueryWithAjaxForm}\n     */ ($(sel))\n  );\n};\n\nexport default populateForm;\n","/* globals Nogin -- Server-set */\n\nimport ajaxFormClientSideValidate from\n  '../utilities/ajaxFormClientSideValidate.js';\nimport AccountValidator from '../form-validators/AccountValidator.js';\nimport SignupView from '../views/signup.js';\nimport ConfirmDialog from '../views/utilities/ConfirmDialog.js';\n\nconst name = SignupView.getName();\nname.trigger('focus');\n\nconst accountForm = SignupView.setAccountSettings();\n\n// redirect to homepage when cancel button is clicked\nconst redirectToRoot = () => {\n  Nogin.redirect('root');\n};\nconst actionButton = SignupView.getActionForAccountForm(accountForm);\nactionButton.on('click', redirectToRoot);\n\nlet confirmed = false;\n\nif (Nogin.signupAgreement) {\n  const confirmSignupDialog = SignupView.setConfirmSignup();\n  ConfirmDialog.getSubmit(\n    confirmSignupDialog\n  ).on('click', () => {\n    if (!confirmed) {\n      confirmed = true;\n      setupValidationSubmission();\n      confirmSignupDialog.modal('hide');\n      accountForm.trigger('submit');\n    }\n  });\n\n  SignupView.getAccountForm().on('submit', (e) => {\n    if (!confirmed) {\n      e.preventDefault();\n      confirmSignupDialog.modal('show');\n    }\n  });\n} else {\n  confirmed = true;\n  setupValidationSubmission();\n}\n\n/**\n * @returns {void}\n */\nfunction setupValidationSubmission () {\n  const av = new AccountValidator({signup: true});\n\n  ajaxFormClientSideValidate(\n    accountForm,\n    {\n      checkXSRF: false,\n      beforeSubmit () {\n        return confirmed;\n      },\n      validate () {\n        av.validateForm();\n      },\n      success (responseText, status /* , xhr, $form */) {\n        // \"nocontent\" (204), \"notmodified\" (304), \"parseerror\" (JSON or XML)\n        // istanbul ignore else\n        if (status === 'success') {\n          onCreatedSuccess();\n        }\n      },\n      error (e) {\n        switch (e.responseText) {\n        case 'email-taken':\n          av.showInvalidEmail();\n          break;\n        case 'username-taken':\n          av.showInvalidUserName();\n          break;\n        default: { // case 'DispatchActivationLinkError': {\n          const lockedAlertDialog = SignupView.onShowLockedErrorAlert({\n            type: 'DispatchActivationLinkError'\n          });\n          lockedAlertDialog.modal('show');\n          break;\n        }\n        }\n      }\n    }\n  );\n}\n\n/**\n * @returns {void}\n */\nfunction onCreatedSuccess () {\n  const accountCreatedAlertDialog = SignupView.accountCreated();\n  // redirect to homepage on new account creation, add short\n  //  delay so user can read alert window\n  SignupView.getAccountCreatedOkButton(\n    accountCreatedAlertDialog\n  ).on('click', () => {\n    setTimeout(redirectToRoot, 3000);\n  });\n  accountCreatedAlertDialog.modal('show');\n}\n"],"names":["xsrfCookie","$","attr","_","Nogin","AccountValidatorView","getForm","getUserId","getFormFields","name","email","user","pass","passConfirm","errorMessages","PleaseEnterName","emailAddressAlreadyInUse","PleaseEnterValidEmail","userNameAlreadyInUse","PleaseChooseUserName","PasswordMinimumLength","PasswordsDontMatch","AccountValidator","_createClass","_this","this","signup","arguments","length","undefined","_classCallCheck","form","formFields","userId","userIsLoggedIn","s","Boolean","val","key","value","setCustomValidity","reportValidity","_this$formFields","Object","values","forEach","field","validity","tooShort","patternMismatch","AlertDialog","populate","_ref","heading","body","keyboard","backdrop","modal","show","text","empty","append","on","e","preventDefault","ConfirmDialog","type","header","cancel","submit","baseSel","concat","getSubmit","confirmDialog","find","SignupView","getName","getAccountForm","setConfirmSignup","signupAgreement","getAccountCreatedOkButton","accountCreatedAlertDialog","getActionForAccountForm","accountForm","setAccountSettings","sel","subheading","action1","action2","accountCreated","lb","onShowLockedErrorAlert","trigger","redirectToRoot","redirect","confirmed","confirmSignupDialog","setupValidationSubmission","cfg","validate","url","beforeSubmit","success","error","_cfg$checkXSRF","checkXSRF","av","validateForm","responseText","status","setTimeout","showInvalidEmail","showInvalidUserName","addEventListener","target","checkValidity","disableXSRF","ajaxForm","headers"],"mappings":"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"}