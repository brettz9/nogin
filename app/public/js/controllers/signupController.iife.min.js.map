{"version":3,"file":"signupController.iife.min.js","sources":["../utilities/ajaxFormClientSideValidate.js","../views/validators/AccountValidatorView.js","../form-validators/AccountValidator.js","../views/utilities/AlertDialog.js","../views/signup.js","../views/utilities/populateForm.js","signupController.js"],"sourcesContent":["/* globals $, Nogin */\n\n// Note: This per-request approach suffers from the possibility that the\n//   may subsequently open a page from the site with nogin in another tab\n//   where that page sets a new, different token meta expectation to a\n//   new value and this will thereby become invalid.\nconst xsrfCookie = $('meta[name=\"csrf-token\"]').attr('content');\n\nconst ajaxFormClientSideValidate = (form, {\n  validate,\n  // `ajaxForm` properties and methods\n  url,\n  beforeSubmit,\n  success,\n  error,\n  checkXSRF = true\n}) => {\n  // As per problem #3 at https://www.html5rocks.com/en/tutorials/forms/constraintvalidation/#toc-current-implementation-issues ,\n  //  we can't do the validation at submit, so we instead add a capturing\n  //  change listener as well as input listeners to reset the messages;\n  //  note that we can't use the `invalid` event to call `reportValidity`\n  //  after our `setCustomValidity()` (to ensure we get the bubbles showing)\n  //  as that fires further `invalid` events; and setting the form to\n  //  `novalidate` won't show the bubbles.\n  form[0].addEventListener('change', (e) => {\n    // Provide custom messages of invalidity\n    validate(e);\n  }, true);\n\n  form[0].addEventListener('input', ({target: field}) => {\n    field.setCustomValidity('');\n    field.checkValidity('');\n  }, true);\n\n  // istanbul ignore if\n  if (checkXSRF && !xsrfCookie && !Nogin.disableXSRF) {\n    error({responseText: 'UnknownError'});\n    return;\n  }\n\n  form.ajaxForm({\n    headers: {\n      // `$.ajaxForm` will auto-check for special `meta` tags to add XSRF\n      //   data, but we avoid the extra meta it requires by sending on the\n      //   header.\n      'X-XSRF-Token': xsrfCookie\n    },\n    url,\n    beforeSubmit,\n    success,\n    error\n  });\n};\n\nexport default ajaxFormClientSideValidate;\n","/* globals $, Nogin */\n\nconst {_} = Nogin;\n\n/**\n* @typedef {PlainObject} AccountInfoElements\n* @property {external:jQuery} name\n* @property {external:jQuery} email\n* @property {external:jQuery} user\n* @property {external:jQuery} pass\n*/\n\nconst AccountValidatorView = {\n  /**\n   * @returns {HTMLFormElement}\n   */\n  getForm () {\n    return $('[data-name=account-form]')[0];\n  },\n\n  /**\n   * @returns {external:jQuery}\n   */\n  getUserId () {\n    return $('#userId');\n  },\n\n  /**\n   * @returns {AccountInfoElements}\n   */\n  getFormFields () {\n    return {\n      name: $('[data-name=\"name\"]')[0],\n      email: $('[data-name=\"email\"]')[0],\n      user: $('[data-name=\"user\"]')[0],\n      pass: $('[data-name=\"pass\"]')[0],\n      passConfirm: $('[data-name=\"pass-confirm\"]') &&\n        $('[data-name=\"pass-confirm\"]')[0]\n    };\n  },\n\n  /**\n   * @type {PlainObject<string,PlainObject<string,string>>}\n   */\n  errorMessages: {\n    name: {\n      PleaseEnterName: _('PleaseEnterName')\n    },\n    email: {\n      emailAddressAlreadyInUse: _('emailAddressAlreadyInUse'),\n      PleaseEnterValidEmail: _('PleaseEnterValidEmail')\n    },\n    user: {\n      userNameAlreadyInUse: _('userNameAlreadyInUse'),\n      PleaseChooseUserName: _('PleaseChooseUserName')\n    },\n    pass: {\n      PasswordMinimumLength: _('PasswordMinimumLength'),\n      PasswordsDontMatch: _('PasswordsDontMatch')\n    }\n  }\n};\n\nexport default AccountValidatorView;\n","import AccountValidatorView from '../views/validators/AccountValidatorView.js';\n\n/**\n * Ensures accounts are valid.\n */\nclass AccountValidator {\n  /**\n   * Sets up properties and methods.\n   * @param {PlainObject} cfg\n   * @param {boolean} cfg.signup\n   */\n  constructor ({signup} = {}) {\n    // build array maps of the form inputs & control groups\n    this.signup = signup;\n\n    this.form = AccountValidatorView.getForm();\n    this.formFields = AccountValidatorView.getFormFields();\n    this.userId = AccountValidatorView.getUserId();\n    this.errorMessages = AccountValidatorView.errorMessages;\n\n    this.userIsLoggedIn = (s) => {\n      // if user is logged in and hasn't changed their password, return ok\n      return this.userId.val() && s === '';\n    };\n  }\n\n  /**\n   * @returns {void}\n   */\n  showInvalidEmail () {\n    this.formFields.email.setCustomValidity(\n      this.errorMessages.email.emailAddressAlreadyInUse\n    );\n    this.form.reportValidity();\n  }\n\n  /**\n   * @returns {void}\n   */\n  showInvalidUserName () {\n    this.formFields.user.setCustomValidity(\n      this.errorMessages.user.userNameAlreadyInUse\n    );\n    this.form.reportValidity();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  validateForm () {\n    const {name, email, user, pass, passConfirm} = this.formFields;\n    Object.values(this.formFields).forEach((field) => {\n      if (field) {\n        field.setCustomValidity('');\n      }\n    });\n    // todo[cypress@>9.0.0]: validity: remove this disabling of istanbul\n    //  to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (name.validity.tooShort) {\n      name.setCustomValidity(this.errorMessages.name.PleaseEnterName);\n    }\n    // todo[cypress@>9.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (email.validity.patternMismatch) {\n      email.setCustomValidity(this.errorMessages.email.PleaseEnterValidEmail);\n    }\n    // todo[cypress@>9.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (user.validity.tooShort) {\n      user.setCustomValidity(this.errorMessages.user.PleaseChooseUserName);\n    }\n    // todo[cypress@>9.0.0]: validity: remove this disabling of istanbul\n    //   to see if fixed\n    //   see https://github.com/cypress-io/cypress/issues/6678\n    // istanbul ignore if\n    if (!this.userIsLoggedIn() && pass.validity.tooShort) {\n      pass.setCustomValidity(this.errorMessages.pass.PasswordMinimumLength);\n    }\n    if (this.signup && pass.value !== passConfirm.value) {\n      pass.setCustomValidity(this.errorMessages.pass.PasswordsDontMatch);\n    }\n    return this.form.reportValidity();\n  }\n}\n\nexport default AccountValidator;\n","/* globals $ */\n\nconst AlertDialog = {\n  /**\n   * @param {PlainObject} cfg\n   * @param {string} cfg.heading\n   * @param {external:jQuery} cfg.body\n   * @param {boolean} cfg.keyboard\n   * @param {boolean|\"static\"} cfg.backdrop\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  populate ({\n    heading,\n    body,\n    keyboard,\n    backdrop\n  }) {\n    const modal = $('[data-name=modal-alert]').modal({\n      show: false, keyboard, backdrop\n    });\n    $('[data-name=modal-alert] .modal-header [data-name=modal-title]').text(\n      heading\n    );\n    $('[data-name=modal-alert] [data-name=modal-body] p').empty().append(body);\n    $('[data-name=modal-alert] button').click((e) => {\n      e.preventDefault();\n      modal.modal('hide');\n    });\n    return modal;\n  }\n};\n\nexport default AlertDialog;\n","/* globals $, Nogin */\nimport AlertDialog from './utilities/AlertDialog.js';\nimport populateForm from './utilities/populateForm.js';\n\nconst {_} = Nogin;\n\nconst SignupView = {\n  /**\n   * @returns {external:jQuery}\n   */\n  getName () {\n    return $('#name-tf');\n  },\n\n  /**\n   * @param {external:jQuery} accountCreatedAlertDialog `HTMLDivElement`\n   * @returns {external:jQuery} `HTMLFormElement`\n   */\n  getAccountCreatedOkButton (accountCreatedAlertDialog) {\n    return accountCreatedAlertDialog.find('[data-name=ok]');\n  },\n\n  /**\n   * @param {external:jQuery} accountForm `HTMLFormElement`\n   * @returns {external:jQuery}\n   */\n  getActionForAccountForm (accountForm) {\n    return accountForm.find('[data-name=action1]');\n  },\n\n  /**\n   * @returns {external:jQuery} `HTMLFormElement`\n   */\n  setAccountSettings () {\n    // Customize the account signup form\n    const accountForm = populateForm('[data-name=account-form]', {\n      heading: _('Signup'),\n      subheading: _('PleaseTellUsAboutYourself'),\n      action1: _('Cancel'),\n      action2: _('Submit')\n    });\n    return accountForm;\n  },\n\n  /**\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  accountCreated () {\n    // Setup the alert that displays when an account is successfully created\n    return AlertDialog.populate({\n      heading: _('AccountCreatedSignup'),\n      body: _('PleaseCheckEmailForVerificationLink', {\n        lb: $('<br/>')[0]\n      }),\n      keyboard: false,\n      backdrop: 'static'\n    });\n  },\n\n  /**\n   * @param {PlainObject} cfg\n   * @param {\"DispatchActivationLinkError\"} [cfg.type]\n   * @returns {external:jQuery} `HTMLDivElement`\n   */\n  onShowLockedErrorAlert ({type}) {\n    return AlertDialog.populate({\n      heading: _('error'),\n      body: _(type, {\n        lb: $('<br/>')[0]\n      }),\n      keyboard: false,\n      backdrop: 'static'\n    });\n  }\n};\n\nexport default SignupView;\n","/* globals $ */\n\nconst populateForm = (sel, {\n  heading,\n  subheading,\n  action1,\n  action2\n}) => {\n  // customize the account settings form\n  $(sel + ' h1.dialog').text(heading);\n  $(sel + ' h2.dialog').text(subheading);\n  $(sel + ' [data-name=action1]').text(action1);\n  $(sel + ' [data-name=action2]').text(action2);\n  return $(sel);\n};\n\nexport default populateForm;\n","/* globals Nogin */\n\nimport ajaxFormClientSideValidate from\n  '../utilities/ajaxFormClientSideValidate.js';\nimport AccountValidator from '../form-validators/AccountValidator.js';\nimport SignupView from '../views/signup.js';\n\nconst name = SignupView.getName();\nname.focus();\n\nconst accountForm = SignupView.setAccountSettings();\n\n// redirect to homepage when cancel button is clicked\nconst redirectToRoot = () => {\n  Nogin.redirect('root');\n};\nconst actionButton = SignupView.getActionForAccountForm(accountForm);\nactionButton.click(redirectToRoot);\n\nsetupValidationSubmission();\n\n/**\n * @returns {void}\n */\nfunction setupValidationSubmission () {\n  const av = new AccountValidator({signup: true});\n\n  ajaxFormClientSideValidate(\n    accountForm,\n    {\n      checkXSRF: false,\n      validate () {\n        av.validateForm();\n      },\n      success (responseText, status, xhr, $form) {\n        // \"nocontent\" (204), \"notmodified\" (304), \"parseerror\" (JSON or XML)\n        // istanbul ignore else\n        if (status === 'success') {\n          onCreatedSuccess();\n        }\n      },\n      error (e) {\n        switch (e.responseText) {\n        case 'email-taken':\n          av.showInvalidEmail();\n          break;\n        case 'username-taken':\n          av.showInvalidUserName();\n          break;\n        default: { // case 'DispatchActivationLinkError': {\n          const lockedAlertDialog = SignupView.onShowLockedErrorAlert({\n            type: 'DispatchActivationLinkError'\n          });\n          lockedAlertDialog.modal('show');\n          break;\n        }\n        }\n      }\n    }\n  );\n}\n\n/**\n * @returns {void}\n */\nfunction onCreatedSuccess () {\n  const accountCreatedAlertDialog = SignupView.accountCreated();\n  // redirect to homepage on new account creation, add short\n  //  delay so user can read alert window\n  SignupView.getAccountCreatedOkButton(accountCreatedAlertDialog).click(() => {\n    setTimeout(redirectToRoot, 3000);\n  });\n  accountCreatedAlertDialog.modal('show');\n}\n"],"names":["xsrfCookie","$","attr","_","Nogin","AccountValidatorView","getForm","getUserId","getFormFields","name","email","user","pass","passConfirm","errorMessages","PleaseEnterName","emailAddressAlreadyInUse","PleaseEnterValidEmail","userNameAlreadyInUse","PleaseChooseUserName","PasswordMinimumLength","PasswordsDontMatch","AccountValidator","_this","this","_ref","arguments","length","undefined","signup","_classCallCheck","form","formFields","userId","userIsLoggedIn","s","val","key","value","setCustomValidity","reportValidity","_this$formFields","Object","values","forEach","field","validity","tooShort","patternMismatch","AlertDialog","heading","body","keyboard","backdrop","modal","show","text","empty","append","click","e","preventDefault","SignupView","accountCreatedAlertDialog","find","accountForm","sel","subheading","action1","action2","lb","type","focus","av","validate","url","beforeSubmit","success","error","_ref$checkXSRF","checkXSRF","redirectToRoot","redirect","validateForm","responseText","status","xhr","$form","setTimeout","showInvalidEmail","showInvalidUserName","addEventListener","_ref2","target","checkValidity","disableXSRF","ajaxForm","headers"],"mappings":"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"}